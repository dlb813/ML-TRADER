{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  height = _Dimensions$get.height,\n  width = _Dimensions$get.width;\nvar CardStack = function (_Component) {\n  _inherits(CardStack, _Component);\n  var _super = _createSuper(CardStack);\n  function CardStack(props) {\n    var _this;\n    _classCallCheck(this, CardStack);\n    _this = _super.call(this, props);\n    _this.state = {\n      drag: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      }),\n      dragDistance: new Animated.Value(0),\n      sindex: 0,\n      cardA: null,\n      cardB: null,\n      topCard: 'cardA',\n      cards: [],\n      touchStart: 0\n    };\n    _this.distance = _this.constructor.distance;\n    return _this;\n  }\n  _createClass(CardStack, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n      this._panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n          return false;\n        },\n        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n          return false;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n          var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n          if (!_this2.props.verticalSwipe && isVerticalSwipe) {\n            return false;\n          }\n          return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n          var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n          if (!_this2.props.verticalSwipe && isVerticalSwipe) {\n            return false;\n          }\n          return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n        },\n        onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n          _this2.props.onSwipeStart();\n          _this2.setState({\n            touchStart: new Date().getTime()\n          });\n        },\n        onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n          var _this2$props = _this2.props,\n            verticalSwipe = _this2$props.verticalSwipe,\n            horizontalSwipe = _this2$props.horizontalSwipe;\n          var _this2$props2 = _this2.props,\n            verticalThreshold = _this2$props2.verticalThreshold,\n            horizontalThreshold = _this2$props2.horizontalThreshold;\n          var dragDistance = _this2.distance(horizontalSwipe ? gestureState.dx : 0, verticalSwipe ? gestureState.dy : 0);\n          _this2.state.dragDistance.setValue(dragDistance);\n          _this2.state.drag.setValue({\n            x: horizontalSwipe ? gestureState.dx : 0,\n            y: verticalSwipe ? gestureState.dy : 0\n          });\n        },\n        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n          return true;\n        },\n        onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n          _this2.props.onSwipeEnd();\n          var currentTime = new Date().getTime();\n          var swipeDuration = currentTime - _this2.state.touchStart;\n          var sindex = _this2.state.sindex;\n          var _this2$props3 = _this2.props,\n            verticalThreshold = _this2$props3.verticalThreshold,\n            horizontalThreshold = _this2$props3.horizontalThreshold,\n            disableTopSwipe = _this2$props3.disableTopSwipe,\n            disableLeftSwipe = _this2$props3.disableLeftSwipe,\n            disableRightSwipe = _this2$props3.disableRightSwipe,\n            disableBottomSwipe = _this2$props3.disableBottomSwipe;\n          if ((Math.abs(gestureState.dy) > verticalThreshold || Math.abs(gestureState.dy) > verticalThreshold * 0.8 && swipeDuration < 150) && _this2.props.verticalSwipe) {\n            var swipeDirection = gestureState.dy < 0 ? height * -1 : height;\n            if (swipeDirection < 0 && !disableTopSwipe) {\n              _this2._nextCard('top', gestureState.dx, swipeDirection, _this2.props.duration);\n            } else if (swipeDirection > 0 && !disableBottomSwipe) {\n              _this2._nextCard('bottom', gestureState.dx, swipeDirection, _this2.props.duration);\n            } else {\n              _this2._resetCard();\n            }\n          } else if ((Math.abs(gestureState.dx) > horizontalThreshold || Math.abs(gestureState.dx) > horizontalThreshold * 0.6 && swipeDuration < 150) && _this2.props.horizontalSwipe) {\n            var _swipeDirection = gestureState.dx < 0 ? width * -1 : width;\n            if (_swipeDirection < 0 && !disableLeftSwipe) {\n              _this2._nextCard('left', _swipeDirection, gestureState.dy, _this2.props.duration);\n            } else if (_swipeDirection > 0 && !disableRightSwipe) {\n              _this2._nextCard('right', _swipeDirection, gestureState.dy, _this2.props.duration);\n            } else {\n              _this2._resetCard();\n            }\n          } else {\n            _this2._resetCard();\n          }\n        },\n        onPanResponderTerminate: function onPanResponderTerminate(evt, gestureState) {},\n        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {\n          return true;\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initDeck();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.children !== this.props.children) {\n        this.setState({\n          cards: nextProps.children,\n          cardA: nextProps.children[this.state.topCard == 'cardA' ? this.state.sindex - 2 : this.state.sindex - 1],\n          cardB: nextProps.children[this.state.topCard == 'cardB' ? this.state.sindex - 2 : this.state.sindex - 1]\n        });\n      }\n    }\n  }, {\n    key: \"initDeck\",\n    value: function initDeck() {\n      if (typeof this.props.children !== 'undefined' && !Array.isArray(this.props.children)) {\n        this.setState({\n          cards: [this.props.children],\n          cardA: this.props.children,\n          cardB: null,\n          sindex: 2\n        });\n      } else if (Array.isArray(this.props.children)) {\n        this.setState({\n          cards: this.props.children,\n          cardA: this.props.children[0],\n          cardB: this.props.children[1],\n          sindex: 2\n        });\n      }\n    }\n  }, {\n    key: \"_resetCard\",\n    value: function _resetCard() {\n      Animated.timing(this.state.dragDistance, {\n        toValue: 0,\n        duration: this.props.duration\n      }).start();\n      Animated.spring(this.state.drag, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        duration: this.props.duration\n      }).start();\n    }\n  }, {\n    key: \"goBackFromTop\",\n    value: function goBackFromTop() {\n      this._goBack('top');\n    }\n  }, {\n    key: \"goBackFromRight\",\n    value: function goBackFromRight() {\n      this._goBack('right');\n    }\n  }, {\n    key: \"goBackFromLeft\",\n    value: function goBackFromLeft() {\n      this._goBack('left');\n    }\n  }, {\n    key: \"goBackFromBottom\",\n    value: function goBackFromBottom() {\n      this._goBack('bottom');\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(n, m) {\n      return (n % m + m) % m;\n    }\n  }, {\n    key: \"_goBack\",\n    value: function _goBack(direction) {\n      var _this3 = this;\n      var _this$state = this.state,\n        cardA = _this$state.cardA,\n        cardB = _this$state.cardB,\n        cards = _this$state.cards,\n        sindex = _this$state.sindex,\n        topCard = _this$state.topCard;\n      if (sindex - 3 < 0 && !this.props.loop) return;\n      var previusCardIndex = this.mod(sindex - 3, cards.length);\n      var update = {};\n      if (topCard === 'cardA') {\n        update = _objectSpread(_objectSpread({}, update), {}, {\n          cardB: cards[previusCardIndex]\n        });\n      } else {\n        update = _objectSpread(_objectSpread({}, update), {}, {\n          cardA: cards[previusCardIndex]\n        });\n      }\n      this.setState(_objectSpread(_objectSpread({}, update), {}, {\n        topCard: topCard === 'cardA' ? 'cardB' : 'cardA',\n        sindex: sindex - 1\n      }), function () {\n        switch (direction) {\n          case 'top':\n            _this3.state.drag.setValue({\n              x: 0,\n              y: -height\n            });\n            _this3.state.dragDistance.setValue(height);\n            break;\n          case 'left':\n            _this3.state.drag.setValue({\n              x: -width,\n              y: 0\n            });\n            _this3.state.dragDistance.setValue(width);\n            break;\n          case 'right':\n            _this3.state.drag.setValue({\n              x: width,\n              y: 0\n            });\n            _this3.state.dragDistance.setValue(width);\n            break;\n          case 'bottom':\n            _this3.state.drag.setValue({\n              x: 0,\n              y: height\n            });\n            _this3.state.dragDistance.setValue(width);\n            break;\n          default:\n        }\n        Animated.spring(_this3.state.dragDistance, {\n          toValue: 0,\n          duration: _this3.props.duration\n        }).start();\n        Animated.spring(_this3.state.drag, {\n          toValue: {\n            x: 0,\n            y: 0\n          },\n          duration: _this3.props.duration\n        }).start();\n      });\n    }\n  }, {\n    key: \"swipeTop\",\n    value: function swipeTop(duration) {\n      this._nextCard('top', 0, -height, duration);\n    }\n  }, {\n    key: \"swipeBottom\",\n    value: function swipeBottom(duration) {\n      this._nextCard('bottom', 0, height, duration);\n    }\n  }, {\n    key: \"swipeRight\",\n    value: function swipeRight(duration) {\n      this._nextCard('right', width, 0, duration);\n    }\n  }, {\n    key: \"swipeLeft\",\n    value: function swipeLeft(duration) {\n      this._nextCard('left', -width, 0, duration);\n    }\n  }, {\n    key: \"_nextCard\",\n    value: function _nextCard(direction, x, y) {\n      var _this4 = this;\n      var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 400;\n      var _this$props = this.props,\n        verticalSwipe = _this$props.verticalSwipe,\n        horizontalSwipe = _this$props.horizontalSwipe,\n        loop = _this$props.loop;\n      var _this$state2 = this.state,\n        sindex = _this$state2.sindex,\n        cards = _this$state2.cards,\n        topCard = _this$state2.topCard;\n      var nextCard = loop ? Math.abs(sindex) % cards.length : sindex;\n      var index = loop ? this.mod(nextCard - 2, cards.length) : nextCard - 2;\n      if (sindex - 2 < cards.length || loop) {\n        Animated.spring(this.state.dragDistance, {\n          toValue: 220,\n          duration: duration\n        }).start();\n        Animated.timing(this.state.drag, {\n          toValue: {\n            x: horizontalSwipe ? x : 0,\n            y: verticalSwipe ? y : 0\n          },\n          duration: duration\n        }).start(function () {\n          var newTopCard = topCard === 'cardA' ? 'cardB' : 'cardA';\n          var update = {};\n          if (newTopCard === 'cardA') {\n            update = _objectSpread(_objectSpread({}, update), {}, {\n              cardB: cards[nextCard]\n            });\n          }\n          if (newTopCard === 'cardB') {\n            update = _objectSpread(_objectSpread({}, update), {}, {\n              cardA: cards[nextCard]\n            });\n          }\n          _this4.state.drag.setValue({\n            x: 0,\n            y: 0\n          });\n          _this4.state.dragDistance.setValue(0);\n          _this4.setState(_objectSpread(_objectSpread({}, update), {}, {\n            topCard: newTopCard,\n            sindex: nextCard + 1\n          }));\n          _this4.props.onSwiped(index);\n          switch (direction) {\n            case 'left':\n              _this4.props.onSwipedLeft(index);\n              _this4.state.cards[index].props.onSwipedLeft();\n              break;\n            case 'right':\n              _this4.props.onSwipedRight(index);\n              _this4.state.cards[index].props.onSwipedRight();\n              break;\n            case 'top':\n              _this4.props.onSwipedTop(index);\n              _this4.state.cards[index].props.onSwipedTop();\n              break;\n            case 'bottom':\n              _this4.props.onSwipedBottom(index);\n              _this4.state.cards[index].props.onSwipedBottom();\n              break;\n            default:\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_setPointerEvents\",\n    value: function _setPointerEvents(topCard, topCardName) {\n      return {\n        pointerEvents: topCard === topCardName ? \"auto\" : \"none\"\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var secondCardZoom = this.props.secondCardZoom;\n      var _this$state3 = this.state,\n        drag = _this$state3.drag,\n        dragDistance = _this$state3.dragDistance,\n        cardA = _this$state3.cardA,\n        cardB = _this$state3.cardB,\n        topCard = _this$state3.topCard,\n        sindex = _this$state3.sindex;\n      var SC = dragDistance.interpolate({\n        inputRange: [0, 10, 220],\n        outputRange: [secondCardZoom, secondCardZoom, 1],\n        extrapolate: 'clamp'\n      });\n      var rotate = drag.x.interpolate({\n        inputRange: [-320, 0, 320],\n        outputRange: this.props.outputRotationRange,\n        extrapolate: 'clamp'\n      });\n      return _jsxs(View, _objectSpread(_objectSpread({}, this._panResponder.panHandlers), {}, {\n        style: [{\n          position: 'relative'\n        }, this.props.style],\n        children: [this.props.renderNoMoreCards(), _jsx(Animated.View, _objectSpread(_objectSpread({}, this._setPointerEvents(topCard, 'cardB')), {}, {\n          style: _objectSpread(_objectSpread({\n            position: 'absolute',\n            zIndex: topCard === 'cardB' ? 3 : 2\n          }, Platform.select({\n            android: {\n              elevation: topCard === 'cardB' ? 3 : 2\n            }\n          })), {}, {\n            opacity: topCard === 'cardB' ? 1 : this.props.passiveOpacity,\n            transform: [{\n              rotate: topCard === 'cardB' ? rotate : '0deg'\n            }, {\n              translateX: topCard === 'cardB' ? drag.x : 0\n            }, {\n              translateY: topCard === 'cardB' ? drag.y : 0\n            }, {\n              scale: topCard === 'cardB' ? 1 : SC\n            }, {\n              scaleY: topCard === 'cardB' ? 1 : this.props.passiveScaleY\n            }]\n          }),\n          children: cardB\n        })), _jsx(Animated.View, _objectSpread(_objectSpread({}, this._setPointerEvents(topCard, 'cardA')), {}, {\n          style: _objectSpread(_objectSpread({\n            position: 'absolute',\n            zIndex: topCard === 'cardA' ? 3 : 2\n          }, Platform.select({\n            android: {\n              elevation: topCard === 'cardA' ? 3 : 2\n            }\n          })), {}, {\n            opacity: topCard === 'cardA' ? 1 : this.props.passiveOpacity,\n            transform: [{\n              rotate: topCard === 'cardA' ? rotate : '0deg'\n            }, {\n              translateX: topCard === 'cardA' ? drag.x : 0\n            }, {\n              translateY: topCard === 'cardA' ? drag.y : 0\n            }, {\n              scale: topCard === 'cardA' ? 1 : SC\n            }, {\n              scaleY: topCard === 'cardA' ? 1 : this.props.passiveScaleY\n            }]\n          }),\n          children: cardA\n        }))]\n      }));\n    }\n  }], [{\n    key: \"distance\",\n    value: function distance(x, y) {\n      var a = Math.abs(x);\n      var b = Math.abs(y);\n      var c = Math.sqrt(a * a + b * b);\n      return c;\n    }\n  }]);\n  return CardStack;\n}(Component);\nexport { CardStack as default };\nCardStack.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  secondCardZoom: PropTypes.number,\n  loop: PropTypes.bool,\n  renderNoMoreCards: PropTypes.func,\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  outputRotationRange: PropTypes.array,\n  duration: PropTypes.number\n};\nCardStack.defaultProps = {\n  style: {},\n  secondCardZoom: 0.95,\n  loop: true,\n  renderNoMoreCards: function renderNoMoreCards() {\n    return _jsx(Text, {\n      children: \"No More Cards\"\n    });\n  },\n  onSwipeStart: function onSwipeStart() {\n    return null;\n  },\n  onSwipeEnd: function onSwipeEnd() {\n    return null;\n  },\n  onSwiped: function onSwiped() {},\n  onSwipedLeft: function onSwipedLeft() {},\n  onSwipedRight: function onSwipedRight() {},\n  onSwipedTop: function onSwipedTop() {},\n  onSwipedBottom: function onSwipedBottom() {},\n  onSwipedAll: function onSwipedAll() {\n    console.log('onSwipedAll');\n  },\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  verticalSwipe: true,\n  verticalThreshold: height / 4,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 2,\n  outputRotationRange: ['-15deg', '0deg', '15deg'],\n  duration: 200\n};","map":{"version":3,"names":["React","Component","PropTypes","StyleSheet","View","Animated","PanResponder","Dimensions","Text","Platform","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","height","width","CardStack","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","drag","ValueXY","x","y","dragDistance","Value","sindex","cardA","cardB","topCard","cards","touchStart","distance","constructor","_createClass","key","value","componentWillMount","_this2","_panResponder","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","isVerticalSwipe","Math","sqrt","pow","dx","dy","verticalSwipe","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onSwipeStart","setState","Date","getTime","onPanResponderMove","_this2$props","horizontalSwipe","_this2$props2","verticalThreshold","horizontalThreshold","setValue","onPanResponderTerminationRequest","onPanResponderRelease","onSwipeEnd","currentTime","swipeDuration","_this2$props3","disableTopSwipe","disableLeftSwipe","disableRightSwipe","disableBottomSwipe","abs","swipeDirection","_nextCard","duration","_resetCard","onPanResponderTerminate","onShouldBlockNativeResponder","componentDidMount","initDeck","componentWillReceiveProps","nextProps","children","Array","isArray","timing","toValue","start","spring","goBackFromTop","_goBack","goBackFromRight","goBackFromLeft","goBackFromBottom","mod","n","m","direction","_this3","_this$state","loop","previusCardIndex","length","update","_objectSpread","swipeTop","swipeBottom","swipeRight","swipeLeft","_this4","arguments","undefined","_this$props","_this$state2","nextCard","index","newTopCard","onSwiped","onSwipedLeft","onSwipedRight","onSwipedTop","onSwipedBottom","_setPointerEvents","topCardName","pointerEvents","render","secondCardZoom","_this$state3","SC","interpolate","inputRange","outputRange","extrapolate","rotate","outputRotationRange","panHandlers","style","position","renderNoMoreCards","zIndex","select","android","elevation","opacity","passiveOpacity","transform","translateX","translateY","scale","scaleY","passiveScaleY","a","b","c","default","propTypes","oneOfType","array","object","isRequired","number","bool","func","onSwipedAll","defaultProps","console","log"],"sources":["D:/MLTraderRoot/ml/node_modules/react-native-card-stack-swiper-stek/CardStack.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {\n  StyleSheet,\n  View,\n  Animated,\n  PanResponder,\n  Dimensions,\n  Text,\n  Platform\n} from 'react-native';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default class CardStack extends Component {\n\n\n  static distance(x, y) {\n    const a = Math.abs(x);\n    const b = Math.abs(y);\n    const c = Math.sqrt((a * a) + (b * b));\n    return c;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state ={\n      drag: new Animated.ValueXY({x: 0, y: 0}),\n      dragDistance: new Animated.Value(0),\n      sindex: 0, // index to the next card to be renderd mod card.length\n      cardA: null,\n      cardB: null,\n      topCard: 'cardA',\n      cards: [],\n      touchStart: 0,\n    };\n    this.distance = this.constructor.distance;\n  }\n\n\n  componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => false,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => false,\n      onMoveShouldSetPanResponder: (evt, gestureState) =>  {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      }, //(parseInt(gestureState.dx) !== 0 && parseInt(gestureState.dy) !== 0),\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      },  //(parseInt(gestureState.dx) !== 0 && parseInt(gestureState.dy) !== 0),\n      onPanResponderGrant: (evt, gestureState) => {\n        this.props.onSwipeStart();\n        this.setState({ touchStart: new Date().getTime() });\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        const { verticalSwipe, horizontalSwipe } = this.props;\n        const { verticalThreshold, horizontalThreshold } = this.props\n        const dragDistance = this.distance((horizontalSwipe) ? gestureState.dx : 0, (verticalSwipe) ? gestureState.dy : 0 );\n        this.state.dragDistance.setValue(dragDistance);\n        this.state.drag.setValue({x: (horizontalSwipe) ? gestureState.dx : 0, y: (verticalSwipe) ? gestureState.dy : 0});\n      },\n      onPanResponderTerminationRequest: (evt, gestureState) => true,\n      onPanResponderRelease: (evt, gestureState) => {\n        this.props.onSwipeEnd();\n        const currentTime = new Date().getTime();\n        const swipeDuration = currentTime-this.state.touchStart;\n        const { sindex } = this.state;\n        const { verticalThreshold,\n                horizontalThreshold,\n                disableTopSwipe,\n                disableLeftSwipe,\n                disableRightSwipe,\n                disableBottomSwipe,\n              } = this.props;\n\n\n        if (((Math.abs(gestureState.dy) > verticalThreshold)  ||\n            ( Math.abs(gestureState.dy) > verticalThreshold*0.8 &&\n              swipeDuration < 150)\n            ) && this.props.verticalSwipe)\n        {\n\n          const swipeDirection = (gestureState.dy < 0) ? height * -1 : height;\n          if(swipeDirection < 0 && !disableTopSwipe)\n          {\n\n            this._nextCard('top', gestureState.dx, swipeDirection, this.props.duration);\n          }\n          else if (swipeDirection > 0 && !disableBottomSwipe)\n          {\n            this._nextCard('bottom', gestureState.dx, swipeDirection, this.props.duration);\n          }\n          else\n          {\n            this._resetCard();\n          }\n        }else if (((Math.abs(gestureState.dx) > horizontalThreshold) ||\n                  (Math.abs(gestureState.dx) > horizontalThreshold*0.6 &&\n                  swipeDuration < 150)\n                ) && this.props.horizontalSwipe) {\n\n          const swipeDirection = (gestureState.dx < 0) ? width * -1 : width;\n          if (swipeDirection < 0 && !disableLeftSwipe)\n          {\n            this._nextCard('left', swipeDirection, gestureState.dy, this.props.duration);\n          }\n          else if(swipeDirection > 0 && !disableRightSwipe)\n          {\n            this._nextCard('right', swipeDirection, gestureState.dy, this.props.duration);\n          }\n          else\n          {\n            this._resetCard();\n          }\n        }\n        else\n        {\n          this._resetCard();\n        }\n      },\n      onPanResponderTerminate: (evt, gestureState) => {\n      },\n      onShouldBlockNativeResponder: (evt, gestureState) => {\n        return true;\n      },\n    });\n  }\n\n  componentDidMount(){\n    this.initDeck();\n  }\n\n  componentWillReceiveProps(nextProps){\n    if (nextProps.children !== this.props.children) {\n      this.setState({\n        cards: nextProps.children,\n        cardA: nextProps.children[(this.state.topCard=='cardA')? this.state.sindex-2 : this.state.sindex-1],\n        cardB: nextProps.children[(this.state.topCard=='cardB')? this.state.sindex-2 : this.state.sindex-1]\n      });\n    }\n  }\n\n  initDeck() {\n    // check if we only have 1 child\n    if(typeof this.props.children !== 'undefined' && !Array.isArray(this.props.children)){\n      this.setState({\n        cards: [this.props.children],\n        cardA: this.props.children,\n        cardB: null,\n        sindex: 2,\n      });\n    }else if(Array.isArray(this.props.children)){\n      this.setState({\n        cards: this.props.children,\n        cardA: this.props.children[0],\n        cardB: this.props.children[1],\n        sindex: 2,\n      });\n    }\n  }\n\n  _resetCard(){\n\n    Animated.timing(\n      this.state.dragDistance,\n      {\n        toValue: 0,\n        duration: this.props.duration,\n      }\n    ).start();\n    Animated.spring(\n      this.state.drag,\n      {\n        toValue: {x: 0, y: 0},\n        duration: this.props.duration,\n      }\n    ).start();\n\n  }\n\n\n  goBackFromTop(){\n    this._goBack('top');\n  }\n\n  goBackFromRight(){\n    this._goBack('right');\n  }\n\n  goBackFromLeft(){\n    this._goBack('left');\n  }\n\n  goBackFromBottom(){\n    this._goBack('bottom');\n  }\n\n  mod(n, m) {\n    return ((n % m) + m) % m;\n  }\n\n  _goBack(direction){\n    const {cardA, cardB, cards, sindex, topCard} = this.state;\n\n    if((sindex-3) < 0 && !this.props.loop) return;\n\n    const previusCardIndex = this.mod(sindex-3, cards.length)\n    let update = {};\n    if(topCard === 'cardA'){\n      update = {\n        ...update,\n        cardB: cards[previusCardIndex]\n\n      }\n    }else{\n      update = {\n        ...update,\n        cardA: cards[previusCardIndex],\n      }\n    }\n\n    this.setState({\n      ...update,\n      topCard: (topCard === 'cardA') ? 'cardB' : 'cardA',\n      sindex: sindex-1\n    }, () => {\n\n      switch (direction) {\n        case 'top':\n          this.state.drag.setValue({x: 0, y: -height});\n          this.state.dragDistance.setValue(height);\n          break;\n        case 'left':\n          this.state.drag.setValue({x: -width, y: 0});\n          this.state.dragDistance.setValue(width);\n          break;\n        case 'right':\n          this.state.drag.setValue({x: width, y: 0});\n          this.state.dragDistance.setValue(width);\n          break;\n        case 'bottom':\n          this.state.drag.setValue({x: 0, y: height});\n          this.state.dragDistance.setValue(width);\n          break;\n        default:\n\n      }\n\n      Animated.spring(\n        this.state.dragDistance,\n        {\n          toValue: 0,\n          duration: this.props.duration,\n        }\n      ).start();\n\n      Animated.spring(\n        this.state.drag,\n        {\n          toValue: {x: 0, y: 0},\n          duration: this.props.duration,\n        }\n      ).start();\n    })\n  }\n\n\n\n  swipeTop(duration){\n    this._nextCard('top', 0, -height, duration);\n  }\n\n  swipeBottom(duration){\n    this._nextCard('bottom', 0, height, duration);\n  }\n\n  swipeRight(duration){\n    this._nextCard('right', width, 0, duration);\n  }\n\n  swipeLeft(duration){\n    this._nextCard('left', -width, 0, duration);\n  }\n\n  _nextCard(direction, x, y, duration=400){\n    const { verticalSwipe, horizontalSwipe, loop } = this.props;\n    const { sindex, cards, topCard } = this.state;\n\n    // index for the next card to be renderd\n    const nextCard = (loop) ? (Math.abs(sindex) % cards.length) : sindex;\n\n    // index of the swiped card\n    const index = (loop) ? this.mod(nextCard-2, cards.length) : nextCard - 2;\n\n    if((sindex-2 < cards.length) || (loop) ){\n      Animated.spring(\n        this.state.dragDistance,\n        {\n          toValue: 220,\n          duration,\n        }\n      ).start();\n\n      Animated.timing(\n        this.state.drag,\n        {\n          toValue: { x: (horizontalSwipe) ? x : 0, y: (verticalSwipe) ? y : 0 },\n          duration,\n        }\n      ).start(() => {\n\n        const newTopCard =  (topCard === 'cardA') ? 'cardB' : 'cardA';\n\n        let update = {};\n        if(newTopCard === 'cardA') {\n          update = {\n            ...update,\n            cardB: cards[nextCard]\n          };\n        }\n        if(newTopCard === 'cardB') {\n          update = {\n            ...update,\n            cardA: cards[nextCard],\n          };\n        }\n        this.state.drag.setValue({x: 0, y: 0});\n        this.state.dragDistance.setValue(0);\n        this.setState({\n          ...update,\n          topCard: newTopCard,\n          sindex: nextCard+1\n        });\n\n        this.props.onSwiped(index);\n        switch (direction) {\n          case 'left':\n            this.props.onSwipedLeft(index);\n            this.state.cards[index].props.onSwipedLeft();\n            break;\n          case 'right':\n            this.props.onSwipedRight(index);\n            this.state.cards[index].props.onSwipedRight();\n            break;\n          case 'top':\n            this.props.onSwipedTop(index);\n            this.state.cards[index].props.onSwipedTop();\n            break;\n          case 'bottom':\n            this.props.onSwipedBottom(index);\n            this.state.cards[index].props.onSwipedBottom();\n            break;\n          default:\n        }\n      });\n\n    }\n  }\n\n\n  /**\n   * @description CardB’s click feature is trigger the CardA on the card stack. (Solved on Android)\n   * @see https://facebook.github.io/react-native/docs/view#pointerevents\n   */\n  _setPointerEvents(topCard, topCardName) {\n    return { pointerEvents: topCard === topCardName ? \"auto\" : \"none\" }\n  }  \n\n  render() {\n\n    const { secondCardZoom } = this.props;\n    const { drag, dragDistance, cardA, cardB, topCard, sindex } = this.state;\n\n    const SC = dragDistance.interpolate({\n      inputRange: [0,10, 220],\n      outputRange: [secondCardZoom,secondCardZoom,1],\n      extrapolate: 'clamp',\n    });\n    const rotate = drag.x.interpolate({\n      inputRange: [-320,0,320],\n      outputRange: this.props.outputRotationRange,\n      extrapolate: 'clamp',\n    });\n\n    return (\n        <View {...this._panResponder.panHandlers} style={[{position:'relative'},this.props.style]}>\n\n          {this.props.renderNoMoreCards()}\n\n          <Animated.View \n              {...this._setPointerEvents(topCard, 'cardB')}\n              style={{\n                position: 'absolute',\n                zIndex: (topCard === 'cardB') ? 3 : 2,\n                ...Platform.select({\n                  android: {\n                    elevation: (topCard === 'cardB') ? 3 : 2,\n                  }\n                }),\n               opacity: (topCard === 'cardB') ? 1 : this.props.passiveOpacity,\n\n              transform: [\n              // {scaleY:0.8},\n                  { rotate: (topCard === 'cardB') ? rotate: '0deg' },\n                  {translateX: (topCard === 'cardB') ? drag.x: 0},\n                  {translateY: (topCard === 'cardB') ? drag.y: 0},\n                  { scale: (topCard === 'cardB') ? 1 : SC},\n              { scaleY: (topCard === 'cardB') ? 1 : this.props.passiveScaleY},\n\n          ]\n              }}>\n              {cardB}\n          </Animated.View>\n          <Animated.View \n              {...this._setPointerEvents(topCard, 'cardA')}\n              style={{\n                position: 'absolute',\n                zIndex: (topCard === 'cardA') ? 3 : 2,\n                ...Platform.select({\n                  android: {\n                    elevation: (topCard === 'cardA') ? 3 : 2,\n                  }\n                }),\n              opacity: (topCard === 'cardA') ? 1 : this.props.passiveOpacity,\n\n              transform: [\n                  { rotate: (topCard === 'cardA') ? rotate: '0deg' },\n                  {translateX: (topCard === 'cardA') ? drag.x: 0},\n                  {translateY: (topCard === 'cardA') ? drag.y: 0},\n                  { scale: (topCard === 'cardA') ? 1 : SC},\n                  { scaleY: (topCard === 'cardA') ? 1 : this.props.passiveScaleY},\n\n          ]\n              }}>\n              {cardA}\n          </Animated.View>\n\n        </View>\n    );\n  }\n}\n\nCardStack.propTypes = {\n\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  secondCardZoom: PropTypes.number,\n  loop: PropTypes.bool,\n  renderNoMoreCards: PropTypes.func,\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight:PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  outputRotationRange: PropTypes.array,\n  duration: PropTypes.number\n\n}\n\nCardStack.defaultProps = {\n\n  style:{},\n  secondCardZoom: 0.95,\n  loop: true,\n  renderNoMoreCards: () => { return (<Text>No More Cards</Text>)},\n  onSwipeStart: () => null,\n  onSwipeEnd: () => null,\n  onSwiped: () => {},\n  onSwipedLeft: () => {},\n  onSwipedRight: () => {},\n  onSwipedTop: () => {},\n  onSwipedBottom: () => {},\n  onSwipedAll: () => {\n    console.log('onSwipedAll')\n  },\n\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  verticalSwipe: true,\n  verticalThreshold: height/4,\n  horizontalSwipe: true,\n  horizontalThreshold: width/2,\n  outputRotationRange: ['-15deg','0deg','15deg'],\n  duration: 200\n\n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
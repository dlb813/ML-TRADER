{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect, useState } from 'react';\nimport { Cache } from \"react-native-cache\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FavoritesContent(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Stocks = _useState2[0],\n      setStocks = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalContent = _useState6[0],\n      setModalContent = _useState6[1];\n\n  useEffect(function () {\n    LoadFavorites();\n  }, []);\n\n  function LoadFavorites() {\n    var cache, text, entries, ent, val;\n    return _regeneratorRuntime.async(function LoadFavorites$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cache = new Cache({\n              namespace: \"Favorites\",\n              policy: {\n                stdTTL: 0\n              },\n              backend: AsyncStorage\n            });\n            text = [];\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(cache.getAll());\n\n          case 4:\n            entries = _context.sent;\n            _context.t0 = _regeneratorRuntime.keys(entries);\n\n          case 6:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 14;\n              break;\n            }\n\n            ent = _context.t1.value;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(cache.get(ent));\n\n          case 10:\n            val = _context.sent;\n            text.push({\n              name: val[0],\n              symbol: val[1],\n              report: val[2],\n              decision: val[3]\n            });\n            _context.next = 6;\n            break;\n\n          case 14:\n            setStocks(text);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function prediction(name, symbol) {\n    var prediction, pred;\n    return _regeneratorRuntime.async(function prediction$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(props.makePrediction(name));\n\n          case 2:\n            prediction = _context2.sent;\n            pred = prediction[1].replace(/\\n/g, '');\n            setModalContent(_jsxs(View, {\n              children: [_jsx(Text, {\n                style: styles.modalText,\n                children: name\n              }), _jsx(Text, {\n                style: styles.modalText,\n                children: symbol\n              }), _jsx(Text, {\n                style: styles.modalText,\n                children: prediction[0]\n              }), _jsx(Text, {\n                style: styles.modalText,\n                children: pred\n              })]\n            }));\n            console.log(\"s\");\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    children: [_jsx(FlatList, {\n      data: Stocks,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            separators = _ref.separators;\n        return _jsx(Pressable, {\n          onPress: function onPress() {\n            return prediction(item.name, item.symbol);\n          },\n          onShowUnderlay: separators.highlight,\n          onHideUnderlay: separators.unhighlight,\n          style: styles.Pressable,\n          children: _jsx(View, {\n            style: styles.view,\n            children: _jsxs(Text, {\n              style: styles.text,\n              children: [item.name, _jsx(\"br\", {}), item.symbol]\n            })\n          })\n        }, item.name);\n      }\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert(\"Modal has been closed.\");\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [modalContent, _jsx(Pressable, {\n            style: [styles.hideModal, styles.buttonClose],\n            onPress: function onPress() {\n              return setModalVisible(!modalVisible);\n            },\n            children: _jsx(Text, {\n              style: styles.modalText,\n              children: \"Hide Modal\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  view: {\n    margin: 0,\n    flex: 1,\n    padding: 10\n  },\n  text: {\n    color: 'white',\n    marginTop: 2,\n    padding: 4,\n    borderWidth: 1,\n    borderColor: \"#D8D8D8\",\n    borderRadius: 6,\n    backgroundColor: \"#291F3F\",\n    color: \"#FFFFFF\",\n    textAlign: \"left\",\n    fontSize: 12,\n    fontWeight: \"bold\"\n  },\n  modalText: {\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  hideModal: {\n    textAlign: \"center\",\n    color: \"white\",\n    backgroundColor: \"#625D72\",\n    padding: 4,\n    paddingHorizontal: 50,\n    borderRadius: 10,\n    marginTop: 10\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"#3A3441\",\n    borderRadius: 20,\n    borderColor: \"white\",\n    borderWidth: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  }\n});","map":{"version":3,"sources":["C:/Projects/MachineLearningApp/Favorites.jsx"],"names":["React","AsyncStorage","useEffect","useState","Cache","FavoritesContent","props","Stocks","setStocks","modalVisible","setModalVisible","modalContent","setModalContent","LoadFavorites","cache","namespace","policy","stdTTL","backend","text","getAll","entries","ent","get","val","push","name","symbol","report","decision","prediction","makePrediction","pred","replace","styles","modalText","console","log","item","separators","highlight","unhighlight","Pressable","view","Alert","alert","centeredView","modalView","hideModal","buttonClose","StyleSheet","create","margin","flex","padding","color","marginTop","borderWidth","borderColor","borderRadius","backgroundColor","textAlign","fontSize","fontWeight","paddingHorizontal","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    TouchableHighlight,\r\n    Image,\r\n    FlatList,\r\n    Pressable,\r\n    Modal,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useEffect, useState } from 'react';\r\nimport { Cache } from \"react-native-cache\";\r\n\r\nexport default function FavoritesContent(props) {\r\n    const [Stocks, setStocks] = useState([]);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [modalContent, setModalContent] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        LoadFavorites();\r\n    }, []);\r\n\r\n    async function LoadFavorites() {\r\n        const cache = new Cache({\r\n            namespace: \"Favorites\",\r\n            policy: {\r\n                stdTTL: 0\r\n            },\r\n            backend: AsyncStorage\r\n        });\r\n        var text = [];\r\n        const entries = await cache.getAll();\r\n        for (let ent in entries) {\r\n            const val = await cache.get(ent);\r\n            text.push({ name: val[0], symbol: val[1], report: val[2], decision: val[3] });\r\n        }\r\n        setStocks(text);\r\n    }\r\n\r\n    async function prediction(name, symbol){\r\n        var prediction = await props.makePrediction(name);\r\n\r\n        var pred = prediction[1].replace(/\\n/g, '');\r\n        setModalContent(\r\n            <View>\r\n            <Text style={styles.modalText}>{name}</Text>\r\n            <Text style={styles.modalText}>{symbol}</Text>\r\n            <Text style={styles.modalText}>{prediction[0]}</Text>\r\n            <Text style={styles.modalText}>{pred}</Text>\r\n            </View>\r\n        );\r\n            console.log(\"s\");\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <FlatList data={Stocks} renderItem={({ item, separators }) => (\r\n                <Pressable\r\n                    key={item.name}\r\n                    onPress={() => prediction(item.name,item.symbol)}\r\n                    onShowUnderlay={separators.highlight}\r\n                    onHideUnderlay={separators.unhighlight}\r\n                    style={styles.Pressable}>\r\n                    <View style={styles.view}>\r\n                        <Text style={styles.text}>{item.name}\r\n                            <br></br>{item.symbol}</Text>\r\n                    </View>\r\n                </Pressable>\r\n            )} />\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    Alert.alert(\"Modal has been closed.\");\r\n                    setModalVisible(!modalVisible);\r\n                }}\r\n            >\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        {modalContent}\r\n                        <Pressable\r\n                            style={[styles.hideModal, styles.buttonClose]}\r\n                            onPress={() => setModalVisible(!modalVisible)}\r\n                        >\r\n                            <Text style={styles.modalText}>Hide Modal</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        margin: 0,\r\n        flex: 1,\r\n        padding: 10,\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        marginTop: 2,\r\n        padding: 4,\r\n        borderWidth: 1,\r\n        borderColor: \"#D8D8D8\",\r\n        borderRadius: 6,\r\n        backgroundColor: \"#291F3F\",\r\n        color: \"#FFFFFF\",\r\n        textAlign: \"left\",\r\n        fontSize: 12,\r\n        fontWeight: \"bold\"\r\n    },\r\n    modalText: {\r\n        textAlign: \"center\",\r\n        color: \"white\"\r\n    },\r\n    hideModal: {\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        backgroundColor: \"#625D72\",\r\n        padding: 4,\r\n        paddingHorizontal: 50,\r\n        borderRadius: 10,\r\n        marginTop: 10,\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        backgroundColor: \"#3A3441\",\r\n        borderRadius: 20,\r\n        borderColor: \"white\",\r\n        borderWidth: 20,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    },\r\n    button: {\r\n        borderRadius: 20,\r\n        padding: 10,\r\n        elevation: 2\r\n    },\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 22\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}
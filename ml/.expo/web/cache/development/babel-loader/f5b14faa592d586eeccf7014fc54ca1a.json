{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { SearchBar } from 'react-native-elements';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect, useState } from 'react';\nimport { Cache } from \"react-native-cache\";\nimport { Symbols, Names } from \"./Data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar stocksAndSymbols = Symbols.concat(Names);\nexport default function SearchContent(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(_jsx(Text, {\n    children: \"Loading\"\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalContent = _useState4[0],\n      setModalContent = _useState4[1];\n\n  var _useState5 = useState([_jsx(Text, {\n    children: \"Search for a stock name or symbol.\"\n  })]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      results = _useState6[0],\n      setResults = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var updateSearch = function updateSearch(search) {\n    var content, i, included, _loop, sym, _ret;\n\n    return _regeneratorRuntime.async(function updateSearch$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setSearch(search);\n            content = [];\n            i = 0;\n            included = 0;\n\n            _loop = function _loop(sym) {\n              var index = i;\n\n              if (stocksAndSymbols[i].includes(search) || stocksAndSymbols[i + Symbols.length].includes(search)) {\n                content.push(_jsx(Pressable, {\n                  style: styles.pressable,\n                  onPress: function _callee() {\n                    return _regeneratorRuntime.async(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            setModalVisible(true);\n                            setModalContent(_jsx(Text, {\n                              style: styles.modalText,\n                              children: \"Loading\"\n                            }));\n                            _context.next = 4;\n                            return _regeneratorRuntime.awrap(prediction(Names[index], Symbols[index]));\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.text,\n                    children: [Symbols[i], _jsx(\"br\", {}), Names[i]]\n                  }, \"text:\" + sym)\n                }, sym));\n                included++;\n              }\n\n              if (included >= 5) {\n                return \"break\";\n              }\n\n              i++;\n            };\n\n            _context2.t0 = _regeneratorRuntime.keys(Symbols);\n\n          case 6:\n            if ((_context2.t1 = _context2.t0()).done) {\n              _context2.next = 13;\n              break;\n            }\n\n            sym = _context2.t1.value;\n            _ret = _loop(sym);\n\n            if (!(_ret === \"break\")) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"break\", 13);\n\n          case 11:\n            _context2.next = 6;\n            break;\n\n          case 13:\n            setResults(content);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function prediction(name, symbol) {\n    var prediction, pred;\n    return _regeneratorRuntime.async(function prediction$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(props.makePrediction(name));\n\n          case 2:\n            prediction = _context3.sent;\n            pred = prediction[1].replace(/\\n/g, '');\n            setModalContent(_jsxs(View, {\n              children: [_jsx(Text, {\n                style: styles.modalText,\n                children: name\n              }), _jsx(Text, {\n                style: styles.modalText,\n                children: symbol\n              }), _jsx(Text, {\n                style: styles.modalText,\n                children: prediction[0]\n              }), _jsx(Text, {\n                style: styles.modalText,\n                children: prediction[1]\n              })]\n            }));\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.view,\n    children: [_jsx(SearchBar, {\n      placeholder: \"Search...\",\n      onChangeText: updateSearch,\n      value: search\n    }), _jsx(ScrollView, {\n      children: results\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert(\"Modal has been closed.\");\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [modalContent, _jsx(Pressable, {\n            style: [styles.hideModal, styles.buttonClose],\n            onPress: function onPress() {\n              return setModalVisible(!modalVisible);\n            },\n            children: _jsx(Text, {\n              style: styles.modalText,\n              children: \"Hide Modal\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  view: {\n    margin: 0,\n    flex: 1,\n    padding: 10\n  },\n  text: {\n    color: 'white',\n    marginTop: 16,\n    padding: 4,\n    borderWidth: 1,\n    borderColor: \"#D8D8D8\",\n    borderRadius: 6,\n    backgroundColor: \"#291F3F\",\n    color: \"#FFFFFF\",\n    textAlign: \"left\",\n    fontSize: 12,\n    fontWeight: \"bold\"\n  },\n  modalText: {\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  hideModal: {\n    textAlign: \"center\",\n    color: \"white\",\n    backgroundColor: \"#625D72\",\n    padding: 4,\n    paddingHorizontal: 50,\n    borderRadius: 10,\n    marginTop: 10\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"#3A3441\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  }\n});","map":{"version":3,"sources":["C:/Projects/MachineLearningApp/Search.jsx"],"names":["React","SearchBar","AsyncStorage","useEffect","useState","Cache","Symbols","Names","stocksAndSymbols","concat","SearchContent","props","search","setSearch","modalContent","setModalContent","results","setResults","modalVisible","setModalVisible","updateSearch","content","i","included","sym","index","includes","length","push","styles","pressable","modalText","prediction","text","name","symbol","makePrediction","pred","replace","view","Alert","alert","centeredView","modalView","hideModal","buttonClose","StyleSheet","create","margin","flex","padding","color","marginTop","borderWidth","borderColor","borderRadius","backgroundColor","textAlign","fontSize","fontWeight","paddingHorizontal","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    Image,\r\n    ScrollView,\r\n    Pressable,\r\n    Modal,\r\n    Button,\r\n} from 'react-native';\r\nimport { SearchBar } from 'react-native-elements';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useEffect, useState } from 'react';\r\nimport { Cache } from \"react-native-cache\";\r\nimport { Symbols, Names } from \"./Data\";\r\nconst stocksAndSymbols = Symbols.concat(Names);\r\n\r\nexport default function SearchContent(props) {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [modalContent, setModalContent] = useState(<Text>Loading</Text>);\r\n    \r\n    const [results, setResults] = useState([<Text>Search for a stock name or symbol.</Text>]);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const updateSearch = async (search) => {\r\n        setSearch(search);\r\n        var content = [];\r\n        var i = 0;\r\n        var included = 0;\r\n        for (let sym in Symbols) {\r\n            let index =i;\r\n            if (stocksAndSymbols[i].includes(search) || stocksAndSymbols[i + Symbols.length].includes(search)) {\r\n                content.push(<Pressable key={sym} style={styles.pressable} onPress={async () => {setModalVisible(true); setModalContent(<Text style={styles.modalText}>Loading</Text>);await prediction(Names[index],Symbols[index]); }}><Text key={\"text:\" + sym} style={styles.text}>{Symbols[i]}<br></br>{Names[i]}</Text></Pressable>)\r\n                included++;\r\n            }\r\n            if (included >= 5) {\r\n                break;\r\n            }\r\n\r\n\r\n            i++;\r\n        }\r\n        setResults(content);\r\n    };\r\n\r\n    async function prediction(name, symbol){\r\n        var prediction = await props.makePrediction(name);\r\n\r\n        var pred = prediction[1].replace(/\\n/g, '');\r\n        setModalContent(\r\n            <View>\r\n            <Text style={styles.modalText}>{name}</Text>\r\n            <Text style={styles.modalText}>{symbol}</Text>\r\n            <Text style={styles.modalText}>{prediction[0]}</Text>\r\n            <Text style={styles.modalText}>{prediction[1]}</Text>\r\n            </View>\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.view}>\r\n            <SearchBar placeholder=\"Search...\" onChangeText={updateSearch} value={search} />\r\n            <ScrollView>{results}</ScrollView>\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    Alert.alert(\"Modal has been closed.\");\r\n                    setModalVisible(!modalVisible);\r\n                }}\r\n            >\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        {modalContent}\r\n                        <Pressable\r\n                            style={[styles.hideModal, styles.buttonClose]}\r\n                            onPress={() => setModalVisible(!modalVisible)}\r\n                        >\r\n                            <Text style={styles.modalText}>Hide Modal</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        margin: 0,\r\n        flex: 1,\r\n        padding: 10,\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        marginTop: 16,\r\n        padding: 4,\r\n        borderWidth: 1,\r\n        borderColor: \"#D8D8D8\",\r\n        borderRadius: 6,\r\n        backgroundColor: \"#291F3F\",\r\n        color: \"#FFFFFF\",\r\n        textAlign: \"left\",\r\n        fontSize: 12,\r\n        fontWeight: \"bold\"\r\n    },\r\n    modalText: {\r\n        textAlign: \"center\",\r\n        color: \"white\"\r\n    },\r\n    hideModal: {\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        backgroundColor: \"#625D72\",\r\n        padding: 4,\r\n        paddingHorizontal: 50,\r\n        borderRadius: 10,\r\n        marginTop: 10,\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        backgroundColor: \"#3A3441\",\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    },\r\n    button: {\r\n        borderRadius: 20,\r\n        padding: 10,\r\n        elevation: 2\r\n    },\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 22\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}
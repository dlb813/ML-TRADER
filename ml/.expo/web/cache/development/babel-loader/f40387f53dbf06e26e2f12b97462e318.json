{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport * as Sentiment from \"sentiment\";\nimport { DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useEffect, useState, useRef } from 'react';\nimport * as ml5 from \"ml5\";\nimport { getCompletion } from \"gpt3\";\nimport { Stocks } from \"./Stocks\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FavoritesContent from \"./Favorites\";\nimport SearchContent from \"./Search\";\nimport HistoryContent from \"./History\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Predict(name) {\n  var res, report, rep, thought, sentiment, options, prediction, pred;\n  return _regeneratorRuntime.async(function Predict$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"predicting\");\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/generate?q=Will%20' + name + '%20stock%20increase%20or%20decrease?%20Why?%20Give%20an%20opinionated%20answer.\\n\\n', {\n            mode: 'cors'\n          }));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.text());\n\n        case 6:\n          report = _context.sent;\n          rep = report;\n          sentiment = new Sentiment();\n          options = {\n            extras: {\n              'amazing': 2,\n              'positive': 2,\n              'will be up': 2,\n              'to be up': 2,\n              'will decline': -3,\n              'expect a negative return ': -6,\n              'continue to rise': 2,\n              'is under pressure': -7\n            }\n          };\n          prediction = sentiment.analyze(rep, options);\n\n          if (prediction.score > 0) {\n            thought = \"Buy!\";\n          } else if (prediction.score == 0) {\n            thought = \"Hold!\";\n          } else {\n            thought = \"Sell!\";\n          }\n\n          pred = [thought, rep];\n          return _context.abrupt(\"return\", pred);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction HomeScreen() {\n  useEffect(function () {}, []);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Stocks, {\n      makePrediction: Predict\n    })\n  });\n}\n\nfunction AboutScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"This was a side project built over the span of around a month. By building it I expanded upon my knowledge of app development and full-stack development.\"\n    })\n  });\n}\n\nfunction Favorites(_ref) {\n  var navigation = _ref.navigation;\n  var favorites = useRef();\n  React.useEffect(function () {\n    var unsubscribe = navigation.addListener('tabPress', function (e) {\n      favorites.current.Refresh();\n    });\n    return unsubscribe;\n  }, [navigation]);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(FavoritesContent, {\n      makePrediction: Predict,\n      ref: favorites\n    })\n  });\n}\n\nfunction History(_ref2) {\n  var navigation = _ref2.navigation;\n  var history = useRef();\n  React.useEffect(function () {\n    var unsubscribe = navigation.addListener('tabPress', function (e) {\n      history.current.Refresh();\n    });\n    return unsubscribe;\n  }, [navigation]);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(HistoryContent, {\n      makePrediction: Predict,\n      ref: history\n    })\n  });\n}\n\nfunction Search() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(SearchContent, {\n      makePrediction: Predict\n    })\n  });\n}\n\nvar Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    children: [_jsx(Tab.Screen, {\n      name: \"Search\",\n      component: Search,\n      options: {\n        tabBarLabel: 'Search',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"card-search\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Favorites\",\n      component: Favorites,\n      options: {\n        tabBarLabel: 'Favorites',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"bookmark\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Home',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"home\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"History\",\n      component: History,\n      options: {\n        tabBarLabel: 'History',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"history\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"About\",\n      component: AboutScreen,\n      options: {\n        tabBarLabel: 'About',\n        tabBarIcon: function tabBarIcon(_ref7) {\n          var color = _ref7.color;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"information\",\n            color: color,\n            size: 26\n          });\n        }\n      }\n    })]\n  });\n}\n\nvar myTheme = DarkTheme;\nmyTheme.colors.text = 'rgb(256, 256, 256)';\nmyTheme.colors.background = DarkTheme.colors.border;\nmyTheme.colors.primary = DarkTheme.colors.primary;\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    theme: DarkTheme,\n    children: _jsx(MyTabs, {})\n  });\n}","map":{"version":3,"sources":["C:/Projects/MLTraderRoot/machinelearningapp/App.jsx"],"names":["React","NavigationContainer","Sentiment","DefaultTheme","DarkTheme","createBottomTabNavigator","useEffect","useState","useRef","ml5","getCompletion","Stocks","MaterialCommunityIcons","FavoritesContent","SearchContent","HistoryContent","Predict","name","console","log","fetch","mode","res","text","report","rep","sentiment","options","extras","prediction","analyze","score","thought","pred","HomeScreen","flex","justifyContent","alignItems","AboutScreen","Favorites","navigation","favorites","unsubscribe","addListener","e","current","Refresh","History","history","Search","Tab","MyTabs","tabBarLabel","tabBarIcon","color","myTheme","colors","background","border","primary","App"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport * as Sentiment from \"sentiment\";\nimport { DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useEffect, useState, useRef } from 'react';\nimport * as ml5 from \"ml5\";\nimport { getCompletion } from \"gpt3\";\nimport { Stocks } from \"./Stocks\";\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport FavoritesContent from \"./Favorites\";\nimport SearchContent from \"./Search\";\nimport HistoryContent from \"./History\";\n\nasync function Predict(name) {\n  var res;\n\n  console.log(\"predicting\");\n  var res = await fetch('http://localhost:3000/api/generate?q=Will%20' + name + '%20stock%20increase%20or%20decrease?%20Why?%20Give%20an%20opinionated%20answer.\\n\\n', { mode: 'cors' });\n  var report = await res.text();\n  var rep = report;\n\n  var thought;\n  var sentiment = new Sentiment();\n  var options = {\n    extras: {\n      'amazing': 2,\n      'positive': 2,\n      'will be up': 2,\n      'to be up': 2,\n      'will decline': -3,\n      'expect a negative return ': -6,\n      'continue to rise': 2,\n      'is under pressure': -7,\n    }\n  };\n  var prediction = sentiment.analyze(rep, options);\n  if (prediction.score > 0) {\n    thought = \"Buy!\";\n  }\n  else if (prediction.score == 0) {\n    thought = \"Hold!\";\n  }\n  else {\n    thought = \"Sell!\";\n  }\n  var pred = [thought, rep];\n  return pred;\n}\n\nfunction HomeScreen() {\n  useEffect(() => {\n\n  }, [])\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Stocks makePrediction={Predict} />\n    </View>\n  )\n}\n\nfunction AboutScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\n      <Text>\n        This was a side project built over the span of around a month. By building it I expanded upon my knowledge of app development and full-stack development.\n      </Text>\n    </View>\n  );\n}\nfunction Favorites({navigation}) {\n  const favorites = useRef();\n  React.useEffect(() => {\n    const unsubscribe = navigation.addListener('tabPress', (e) => {\n      // Prevent default behavior\n      //e.preventDefault();\n      favorites.current.Refresh();\n      //alert('Default behavior prevented');\n      // Do something manually\n      // ...\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <FavoritesContent makePrediction={Predict} ref={favorites}/>\n    </View>\n  );\n}\nfunction History({navigation}) {\n  const history = useRef();\n  React.useEffect(() => {\n    const unsubscribe = navigation.addListener('tabPress', (e) => {\n      // Prevent default behavior\n      //e.preventDefault();\n      history.current.Refresh();\n      //alert('Default behavior prevented');\n      // Do something manually\n      // ...\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <HistoryContent makePrediction={Predict} ref={history}/>\n    </View>\n  );\n}\nfunction Search() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n      <SearchContent makePrediction={Predict}/>\n    </View>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return (\n    <Tab.Navigator initialRouteName=\"Home\">\n      <Tab.Screen name=\"Search\" component={Search} options={{\n        tabBarLabel: 'Search',\n        tabBarIcon: ({ color }) => (\n          <MaterialCommunityIcons name=\"card-search\" color={color} size={26} />\n        ),\n      }}/>\n      <Tab.Screen name=\"Favorites\" component={Favorites} options={{\n        tabBarLabel: 'Favorites',\n        tabBarIcon: ({ color }) => (\n          <MaterialCommunityIcons name=\"bookmark\" color={color} size={26} />\n        ),\n      }}/>\n      <Tab.Screen name=\"Home\" component={HomeScreen} options={{\n        tabBarLabel: 'Home',\n        tabBarIcon: ({ color }) => (\n          <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n        ),\n      }} />\n      <Tab.Screen name=\"History\" component={History} options={{\n        tabBarLabel: 'History',\n        tabBarIcon: ({ color }) => (\n          <MaterialCommunityIcons name=\"history\" color={color} size={26} />\n        ),\n      }}/>\n       <Tab.Screen name=\"About\" component={AboutScreen} options={{\n        tabBarLabel: 'About',\n        tabBarIcon: ({ color }) => (\n          <MaterialCommunityIcons name=\"information\" color={color} size={26} />\n        ),\n      }}/>\n    </Tab.Navigator>\n  );\n}\nconst myTheme = DarkTheme;\nmyTheme.colors.text = 'rgb(256, 256, 256)';\nmyTheme.colors.background = DarkTheme.colors.border;\nmyTheme.colors.primary = DarkTheme.colors.primary;\nexport default function App() {\n  return (\n    <NavigationContainer theme={DarkTheme}>\n      <MyTabs />\n    </NavigationContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useEffect, useState } from 'react';\nimport CardStack, { Card } from 'react-native-card-stack-swiper-stek';\nimport { Symbols, Names } from \"./Data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _symbols = [];\nvar _names = [];\n\nfunction chooseRandomStocks(symbols, names, num) {\n  var res = [];\n\n  for (var i = 0; i < num;) {\n    var random = Math.floor(Math.random() * symbols.length);\n\n    if (res.indexOf(symbols[random]) !== -1) {\n      continue;\n    }\n\n    ;\n    var rn = random;\n\n    _symbols.push(symbols[rn]);\n\n    _names.push(names[rn]);\n\n    i++;\n  }\n\n  ;\n}\n\n;\nchooseRandomStocks(Symbols, Names, 5);\nexport function Stocks(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Cards = _useState2[0],\n      setCards = _useState2[1];\n\n  var index = 0;\n  useEffect(function () {\n    load();\n  }, []);\n\n  function load() {\n    var tCards, _iterator, _step, sym, prediction;\n\n    return _regeneratorRuntime.async(function load$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tCards = [];\n            _iterator = _createForOfIteratorHelperLoose(_symbols);\n\n          case 2:\n            if ((_step = _iterator()).done) {\n              _context.next = 13;\n              break;\n            }\n\n            sym = _step.value;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(props.makePrediction(_names[index]));\n\n          case 6:\n            prediction = _context.sent;\n            console.log(prediction);\n            tCards.push(_jsxs(Card, {\n              style: styles.card,\n              loop: false,\n              children: [_jsx(\"br\", {}), _jsx(Text, {\n                style: styles.label,\n                pointerEvents: \"none\",\n                children: _names[index]\n              }), _jsx(Text, {\n                style: styles.label2,\n                pointerEvents: \"none\",\n                children: _symbols[index]\n              }), _jsx(\"br\", {}), _jsx(Text, {\n                style: styles.decision,\n                pointerEvents: \"none\",\n                children: prediction[0]\n              }), _jsx(\"br\", {}), _jsx(Text, {\n                style: styles.report,\n                pointerEvents: \"none\",\n                children: prediction[1]\n              })]\n            }, _symbols[index]));\n            index++;\n\n            if (index == _symbols.length) {\n              console.log(\"done\");\n              setCards(tCards);\n            }\n\n          case 11:\n            _context.next = 2;\n            break;\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(CardStack, {\n      style: styles.content,\n      renderNoMoreCards: function renderNoMoreCards() {\n        return _jsx(Text, {\n          style: {\n            fontWeight: '700',\n            fontSize: 18,\n            color: 'gray'\n          },\n          children: \"No more cards :(\"\n        });\n      },\n      onSwiped: function onSwiped() {\n        return console.log('onSwiped');\n      },\n      onSwipedLeft: function onSwipedLeft() {\n        return console.log('onSwipedLeft');\n      },\n      children: Cards\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#f2f2f2'\n  },\n  content: {\n    flex: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    width: 300,\n    height: '40%',\n    backgroundColor: '#413563',\n    borderRadius: 5,\n    shadowColor: 'rgba(0,0,0,0.5)',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    padding: 10,\n    shadowOpacity: 0.5\n  },\n  card1: {\n    padding: 10\n  },\n  card2: {\n    backgroundColor: '#FEB12C'\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 30,\n    fontFamily: 'System',\n    color: '#ffffff',\n    backgroundColor: 'transparent'\n  },\n  label2: {\n    textAlign: 'center',\n    fontSize: 20,\n    fontFamily: 'System',\n    color: '#ffffff',\n    backgroundColor: 'transparent'\n  },\n  report: {\n    textAlign: 'center',\n    fontSize: '11%',\n    fontFamily: 'System',\n    color: '#ffffff',\n    backgroundColor: 'transparent'\n  },\n  decision: {\n    textAlign: 'center',\n    fontSize: 15,\n    fontFamily: 'System',\n    color: '#ffffff',\n    backgroundColor: 'transparent'\n  },\n  footer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    width: 220,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  button: {\n    shadowColor: 'rgba(0,0,0,0.3)',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.5,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 0\n  },\n  orange: {\n    width: 55,\n    height: 55,\n    borderWidth: 6,\n    borderColor: 'rgb(246,190,66)',\n    borderRadius: 55,\n    marginTop: -15\n  },\n  green: {\n    width: 75,\n    height: 75,\n    backgroundColor: '#fff',\n    borderRadius: 75,\n    borderWidth: 6,\n    borderColor: '#01df8a'\n  },\n  red: {\n    width: 75,\n    height: 75,\n    backgroundColor: '#fff',\n    borderRadius: 75,\n    borderWidth: 6,\n    borderColor: '#fd267d'\n  }\n});","map":{"version":3,"sources":["C:/Projects/MachineLearningApp/Stocks.jsx"],"names":["React","useEffect","useState","CardStack","Card","Symbols","Names","_symbols","_names","chooseRandomStocks","symbols","names","num","res","i","random","Math","floor","length","indexOf","rn","push","Stocks","props","Cards","setCards","index","load","tCards","sym","makePrediction","prediction","console","log","styles","card","label","label2","decision","report","flex","content","fontWeight","fontSize","color","StyleSheet","create","container","flexDirection","backgroundColor","alignItems","justifyContent","width","height","borderRadius","shadowColor","shadowOffset","padding","shadowOpacity","card1","card2","textAlign","fontFamily","footer","buttonContainer","button","zIndex","orange","borderWidth","borderColor","marginTop","green","red"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Image,\r\n} from 'react-native';\r\nimport { useEffect, useState } from 'react';\r\nimport CardStack, { Card } from 'react-native-card-stack-swiper-stek';\r\nimport {Symbols, Names} from \"./Data\";\r\nvar _symbols=[];\r\nvar _names=[];\r\nfunction chooseRandomStocks(symbols, names, num) {\r\n  const res = [];\r\n  for(let i = 0; i < num; ){\r\n     const random = Math.floor(Math.random() * symbols.length);\r\n     if(res.indexOf(symbols[random]) !== -1){\r\n        continue;\r\n     };\r\n      var rn = random;\r\n      _symbols.push(symbols[rn]);\r\n      _names.push(names[rn]);\r\n     i++;\r\n  };\r\n};\r\nchooseRandomStocks(Symbols,Names,5);\r\n\r\nexport function Stocks(props) {\r\n  const [Cards, setCards] = useState([]);\r\n  var index = 0;\r\n  useEffect(() => {\r\n    load();\r\n  }, [])\r\n  async function load() {\r\n    var tCards = [];\r\n    for (let sym of _symbols) {\r\n      var prediction = await props.makePrediction(_names[index]);\r\n      console.log(prediction);\r\n      tCards.push(\r\n        <Card style={styles.card} key={_symbols[index]} loop={false} >\r\n          <br></br>\r\n          <Text style={styles.label} pointerEvents=\"none\">{_names[index]}</Text>\r\n          <Text style={styles.label2} pointerEvents=\"none\">{_symbols[index]}</Text>\r\n          <br></br>\r\n          <Text style={styles.decision} pointerEvents=\"none\">{prediction[0]}</Text>\r\n          <br></br>\r\n          <Text style={styles.report} pointerEvents=\"none\">{prediction[1]}</Text>\r\n        </Card>)\r\n      index++;\r\n      if (index == _symbols.length) {\r\n        console.log(\"done\");\r\n        setCards(tCards);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n\r\n      <CardStack\r\n        style={styles.content}\r\n        renderNoMoreCards={() => <Text style={{ fontWeight: '700', fontSize: 18, color: 'gray' }}>No more cards :(</Text>}\r\n        onSwiped={() => console.log('onSwiped')}\r\n        onSwipedLeft={() => console.log('onSwipedLeft')}\r\n      >\r\n        {Cards}\r\n      </CardStack>\r\n    </View>\r\n  );\r\n};\r\n\r\n/*<Card style={[styles.card, styles.card1]}><Text style={styles.label}>A</Text></Card>\r\n        <Card style={[styles.card, styles.card2]} onSwipedLeft={() => alert('onSwipedLeft')}><Text style={styles.label}>B</Text></Card>\r\n        <Card style={[styles.card, styles.card1]}><Text style={styles.label}>C</Text></Card>\r\n        <Card style={[styles.card, styles.card2]}><Text style={styles.label}>D</Text></Card>\r\n        <Card style={[styles.card, styles.card1]}><Text style={styles.label}>E</Text></Card> */\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    backgroundColor: '#f2f2f2',\r\n  },\r\n  content: {\r\n    flex: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  card: {\r\n    width: 300,\r\n    height: '40%',\r\n    backgroundColor: '#413563',\r\n    borderRadius: 5,\r\n    shadowColor: 'rgba(0,0,0,0.5)',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1\r\n    },\r\n    padding:10,\r\n    shadowOpacity: 0.5,\r\n  },\r\n  card1: {\r\n    \r\n    padding:10,\r\n  },\r\n  card2: {\r\n    backgroundColor: '#FEB12C',\r\n  },\r\n  label: {\r\n    textAlign: 'center',\r\n    fontSize: 30,\r\n    fontFamily: 'System',\r\n    color: '#ffffff',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  label2: {\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    fontFamily: 'System',\r\n    color: '#ffffff',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  report: {\r\n    textAlign: 'center',\r\n    fontSize: '11%',\r\n    fontFamily: 'System',\r\n    color: '#ffffff',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  decision: {\r\n    textAlign: 'center',\r\n    fontSize: 15,\r\n    fontFamily: 'System',\r\n    color: '#ffffff',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  footer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    width: 220,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  button: {\r\n    shadowColor: 'rgba(0,0,0,0.3)',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1\r\n    },\r\n    shadowOpacity: 0.5,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 0,\r\n  },\r\n  orange: {\r\n    width: 55,\r\n    height: 55,\r\n    borderWidth: 6,\r\n    borderColor: 'rgb(246,190,66)',\r\n    borderRadius: 55,\r\n    marginTop: -15\r\n  },\r\n  green: {\r\n    width: 75,\r\n    height: 75,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 75,\r\n    borderWidth: 6,\r\n    borderColor: '#01df8a',\r\n  },\r\n  red: {\r\n    width: 75,\r\n    height: 75,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 75,\r\n    borderWidth: 6,\r\n    borderColor: '#fd267d',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}
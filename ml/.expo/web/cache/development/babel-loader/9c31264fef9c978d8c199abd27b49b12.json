{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect, useState } from 'react';\nimport { Cache } from \"react-native-cache\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FavoritesContent() {\n  var _useState = useState([_jsx(Text, {\n    children: \"Loading\"\n  })]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Stocks = _useState2[0],\n      setStocks = _useState2[1];\n\n  useEffect(function () {\n    LoadFavorites();\n  }, []);\n\n  function LoadFavorites() {\n    var cache, text, entries, ent, val;\n    return _regeneratorRuntime.async(function LoadFavorites$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cache = new Cache({\n              namespace: \"Favorites\",\n              policy: {\n                stdTTL: 0\n              },\n              backend: AsyncStorage\n            });\n            text = [];\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(cache.getAll());\n\n          case 4:\n            entries = _context.sent;\n            console.log(entries);\n            _context.t0 = _regeneratorRuntime.keys(entries);\n\n          case 7:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 15;\n              break;\n            }\n\n            ent = _context.t1.value;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(cache.get(ent));\n\n          case 11:\n            val = _context.sent;\n            text.push(_jsxs(Text, {\n              children: [val[0], _jsx(\"br\", {}), val[1]]\n            }, val[0]));\n            _context.next = 7;\n            break;\n\n          case 15:\n            setStocks(text);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(View, {\n    children: Stocks\n  });\n}","map":{"version":3,"sources":["C:/Projects/MachineLearningApp/Favorites.jsx"],"names":["React","AsyncStorage","useEffect","useState","Cache","FavoritesContent","Stocks","setStocks","LoadFavorites","cache","namespace","policy","stdTTL","backend","text","getAll","entries","console","log","ent","get","val","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,oBAAtB;;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACvC,kBAA4BF,QAAQ,CAAC,CAAC,KAAC,IAAD;AAAA;AAAA,IAAD,CAAD,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AACAL,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;;AAIA,WAAeA,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,KADV,GACkB,IAAIL,KAAJ,CAAU;AACpBM,cAAAA,SAAS,EAAE,WADS;AAEpBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,MAAM,EAAE;AADJ,eAFY;AAKpBC,cAAAA,OAAO,EAAEZ;AALW,aAAV,CADlB;AAQQa,YAAAA,IARR,GAQa,EARb;AAAA;AAAA,6CAS0BL,KAAK,CAACM,MAAN,EAT1B;;AAAA;AASUC,YAAAA,OATV;AAUIC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAVJ,mDAWmBA,OAXnB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWYG,YAAAA,GAXZ;AAAA;AAAA,6CAa0BV,KAAK,CAACW,GAAN,CAAUD,GAAV,CAb1B;;AAAA;AAacE,YAAAA,GAbd;AAcQP,YAAAA,IAAI,CAACQ,IAAL,CAAU,MAAC,IAAD;AAAA,yBAAoBD,GAAG,CAAC,CAAD,CAAvB,EAA2B,cAA3B,EAAqCA,GAAG,CAAC,CAAD,CAAxC;AAAA,eAAWA,GAAG,CAAC,CAAD,CAAd,CAAV;AAdR;AAAA;;AAAA;AAgBId,YAAAA,SAAS,CAACO,IAAD,CAAT;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA,SACI,KAAC,IAAD;AAAA,cACKR;AADL,IADJ;AAKH","sourcesContent":["import React from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    Image,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useEffect, useState } from 'react';\r\nimport { Cache } from \"react-native-cache\";\r\n\r\nexport default function FavoritesContent() {\r\n    const [Stocks, setStocks] = useState([<Text>Loading</Text>]);\r\n    useEffect(() => {\r\n        LoadFavorites();\r\n    },[]);\r\n\r\n    async function LoadFavorites() {\r\n        const cache = new Cache({\r\n            namespace: \"Favorites\",\r\n            policy: {\r\n                stdTTL: 0\r\n            },\r\n            backend: AsyncStorage\r\n        });\r\n        var text=[];\r\n        const entries = await cache.getAll();\r\n        console.log(entries);\r\n        for(let ent in entries)\r\n        {\r\n            const val = await cache.get(ent);\r\n            text.push(<Text key={val[0]}>{val[0]}<br></br>{val[1]}</Text>)\r\n        }\r\n        setStocks(text);\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            {Stocks}\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
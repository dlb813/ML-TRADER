{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SearchBar } from 'react-native-elements';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect, useState } from 'react';\nimport { Cache } from \"react-native-cache\";\nimport { Symbols, Names } from \"./Data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar stocksAndSymbols = Symbols.concat(Names);\nexport default function SearchContent() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([_jsx(Text, {\n    children: \"Search for a stock name or symbol.\"\n  })]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var updateSearch = function updateSearch(search) {\n    var content, i, sym;\n    return _regeneratorRuntime.async(function updateSearch$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSearch(search);\n            content = [];\n            i = 0;\n\n            for (sym in Symbols) {\n              if (stocksAndSymbols[i].includes(search) || stocksAndSymbols[i + Symbols.length].includes(search)) {\n                content.push(_jsx(Pressable, {\n                  children: _jsxs(Text, {\n                    children: [sym, _jsx(\"br\", {}), Names[i]]\n                  })\n                }, i));\n              }\n\n              i++;\n            }\n\n            setResults(content);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.view,\n    children: [_jsx(SearchBar, {\n      placeholder: \"Search...\",\n      onChangeText: updateSearch,\n      value: search\n    }), _jsx(ScrollView, {\n      children: results\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  view: {\n    margin: 10,\n    flex: 1,\n    padding: 24\n  },\n  Text: {\n    color: 'white',\n    marginTop: 16,\n    paddingVertical: 8,\n    borderWidth: 4,\n    borderColor: \"#20232a\",\n    borderRadius: 6,\n    backgroundColor: \"#61dafb\",\n    color: \"#20232a\",\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Projects/MachineLearningApp/Search.jsx"],"names":["React","SearchBar","AsyncStorage","useEffect","useState","Cache","Symbols","Names","stocksAndSymbols","concat","SearchContent","search","setSearch","results","setResults","updateSearch","content","i","sym","includes","length","push","styles","view","StyleSheet","create","margin","flex","padding","Text","color","marginTop","paddingVertical","borderWidth","borderColor","borderRadius","backgroundColor","textAlign","fontSize","fontWeight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAUA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,OAAT,EAAkBC,KAAlB;;;AACA,IAAMC,gBAAgB,GAAGF,OAAO,CAACG,MAAR,CAAeF,KAAf,CAAzB;AAEA,eAAe,SAASG,aAAT,GAAyB;AACpC,kBAA4BN,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA8BR,QAAQ,CAAC,CAAC,KAAC,IAAD;AAAA;AAAA,IAAD,CAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAMJ,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,SAAS,CAACD,MAAD,CAAT;AACIK,YAAAA,OAFa,GAEH,EAFG;AAGbC,YAAAA,CAHa,GAGX,CAHW;;AAIjB,iBAAQC,GAAR,IAAeZ,OAAf,EACA;AACI,kBAAGE,gBAAgB,CAACS,CAAD,CAAhB,CAAoBE,QAApB,CAA6BR,MAA7B,KAAsCH,gBAAgB,CAACS,CAAC,GAACX,OAAO,CAACc,MAAX,CAAhB,CAAmCD,QAAnC,CAA4CR,MAA5C,CAAzC,EACA;AACIK,gBAAAA,OAAO,CAACK,IAAR,CAAa,KAAC,SAAD;AAAA,4BAAmB,MAAC,IAAD;AAAA,+BAAOH,GAAP,EAAW,cAAX,EAAqBX,KAAK,CAACU,CAAD,CAA1B;AAAA;AAAnB,mBAAgBA,CAAhB,CAAb;AACH;;AACDA,cAAAA,CAAC;AACJ;;AACDH,YAAAA,UAAU,CAACE,OAAD,CAAV;;AAZiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAeA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,IAApB;AAAA,eACI,KAAC,SAAD;AAAW,MAAA,WAAW,EAAC,WAAvB;AAAmC,MAAA,YAAY,EAAER,YAAjD;AAA+D,MAAA,KAAK,EAAEJ;AAAtE,MADJ,EAEI,KAAC,UAAD;AAAA,gBAAaE;AAAb,MAFJ;AAAA,IADJ;AAMH;AAAA;AAED,IAAMS,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,IAAI,EAAE,CAFF;AAGJC,IAAAA,OAAO,EAAE;AAHL,GADyB;AAM/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,SAAS,EAAE,EAFP;AAGJC,IAAAA,eAAe,EAAE,CAHb;AAIJC,IAAAA,WAAW,EAAE,CAJT;AAKJC,IAAAA,WAAW,EAAE,SALT;AAMJC,IAAAA,YAAY,EAAE,CANV;AAOJC,IAAAA,eAAe,EAAE,SAPb;AAQJN,IAAAA,KAAK,EAAE,SARH;AASJO,IAAAA,SAAS,EAAE,QATP;AAUJC,IAAAA,QAAQ,EAAE,EAVN;AAWJC,IAAAA,UAAU,EAAE;AAXR;AANyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    Image,\r\n    ScrollView,\r\n    Pressable,\r\n} from 'react-native';\r\nimport { SearchBar } from 'react-native-elements';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useEffect, useState } from 'react';\r\nimport { Cache } from \"react-native-cache\";\r\nimport { Symbols, Names } from \"./Data\";\r\nconst stocksAndSymbols = Symbols.concat(Names);\r\n\r\nexport default function SearchContent() {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [results, setResults] = useState([<Text>Search for a stock name or symbol.</Text>]);\r\n\r\n    const updateSearch = async(search) => {\r\n        setSearch(search);\r\n        var content = [];\r\n        var i=0;\r\n        for(let sym in Symbols)\r\n        {\r\n            if(stocksAndSymbols[i].includes(search)||stocksAndSymbols[i+Symbols.length].includes(search))\r\n            {\r\n                content.push(<Pressable key={i}><Text>{sym}<br></br>{Names[i]}</Text></Pressable>)\r\n            }\r\n            i++;\r\n        }\r\n        setResults(content);\r\n    };\r\n\r\n    return (\r\n        <View style={styles.view}>\r\n            <SearchBar placeholder=\"Search...\" onChangeText={updateSearch} value={search} />\r\n            <ScrollView>{results}</ScrollView>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  view: {\r\n    margin: 10,\r\n    flex: 1,\r\n    padding: 24,\r\n  },\r\n  Text: {\r\n    color: 'white',\r\n    marginTop: 16,\r\n    paddingVertical: 8,\r\n    borderWidth: 4,\r\n    borderColor: \"#20232a\",\r\n    borderRadius: 6,\r\n    backgroundColor: \"#61dafb\",\r\n    color: \"#20232a\",\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\"\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect, useState } from 'react';\nimport { Cache } from \"react-native-cache\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function FavoritesContent() {\n  var _useState = useState([_jsx(Text, {\n    children: \"Loading\"\n  })]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Stocks = _useState2[0],\n      setStocks = _useState2[1];\n\n  useEffect(function () {\n    LoadFavorites();\n  }, []);\n\n  function LoadFavorites() {\n    var cache, text, entries, _iterator, _step, _ref, _ref2, key, value;\n\n    return _regeneratorRuntime.async(function LoadFavorites$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cache = new Cache({\n              namespace: \"Favorites\",\n              policy: {\n                stdTTL: 0\n              },\n              backend: AsyncStorage\n            });\n            text = [];\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(cache.getAll());\n\n          case 4:\n            entries = _context.sent;\n            console.log(entries);\n\n            for (_iterator = _createForOfIteratorHelperLoose(entries.entries()); !(_step = _iterator()).done;) {\n              _ref = _step.value;\n              _ref2 = _slicedToArray(_ref, 2);\n              key = _ref2[0];\n              value = _ref2[1];\n              text.push(_jsx(Text, {\n                children: \"jadoiwj\"\n              }, key));\n            }\n\n            setStocks(text);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(View, {\n    children: Stocks\n  });\n}","map":{"version":3,"sources":["C:/Projects/MachineLearningApp/Favorites.jsx"],"names":["React","AsyncStorage","useEffect","useState","Cache","FavoritesContent","Stocks","setStocks","LoadFavorites","cache","namespace","policy","stdTTL","backend","text","getAll","entries","console","log","key","value","push"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACvC,kBAA4BF,QAAQ,CAAC,CAAC,KAAC,IAAD;AAAA;AAAA,IAAD,CAAD,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AACAL,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;;AAIA,WAAeA,aAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,KADV,GACkB,IAAIL,KAAJ,CAAU;AACpBM,cAAAA,SAAS,EAAE,WADS;AAEpBC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,MAAM,EAAE;AADJ,eAFY;AAKpBC,cAAAA,OAAO,EAAEZ;AALW,aAAV,CADlB;AAQQa,YAAAA,IARR,GAQa,EARb;AAAA;AAAA,6CAS0BL,KAAK,CAACM,MAAN,EAT1B;;AAAA;AASUC,YAAAA,OATV;AAUIC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,6DAAuBA,OAAO,CAACA,OAAR,EAAvB,iCACA;AAAA;AAAA;AADSG,cAAAA,GACT;AADaC,cAAAA,KACb;AACIN,cAAAA,IAAI,CAACO,IAAL,CAAU,KAAC,IAAD;AAAA;AAAA,iBAAWF,GAAX,CAAV;AACH;;AACDZ,YAAAA,SAAS,CAACO,IAAD,CAAT;;AAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SACI,KAAC,IAAD;AAAA,cACKR;AADL,IADJ;AAKH","sourcesContent":["import React from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    Image,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useEffect, useState } from 'react';\r\nimport { Cache } from \"react-native-cache\";\r\n\r\nexport default function FavoritesContent() {\r\n    const [Stocks, setStocks] = useState([<Text>Loading</Text>]);\r\n    useEffect(() => {\r\n        LoadFavorites();\r\n    },[]);\r\n\r\n    async function LoadFavorites() {\r\n        const cache = new Cache({\r\n            namespace: \"Favorites\",\r\n            policy: {\r\n                stdTTL: 0\r\n            },\r\n            backend: AsyncStorage\r\n        });\r\n        var text=[];\r\n        const entries = await cache.getAll();\r\n        console.log(entries);\r\n        for(let [key,value] of entries.entries())\r\n        {\r\n            text.push(<Text key={key}>jadoiwj</Text>);\r\n        }\r\n        setStocks(text);\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            {Stocks}\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
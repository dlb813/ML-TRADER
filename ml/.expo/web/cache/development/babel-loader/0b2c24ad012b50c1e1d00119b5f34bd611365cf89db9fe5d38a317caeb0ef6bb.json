{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar memoryStore = {};\nexports.default = {\n  setItem: function setItem(key, value) {\n    return _regeneratorRuntime.async(function setItem$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            memoryStore[key] = value;\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getAllKeys: function getAllKeys() {\n    return _regeneratorRuntime.async(function getAllKeys$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Object.keys(memoryStore));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getItem: function getItem(key) {\n    return _regeneratorRuntime.async(function getItem$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", memoryStore[key]);\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  multiGet: function multiGet(keys) {\n    var results, _iterator, _step, key;\n    return _regeneratorRuntime.async(function multiGet$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            results = [];\n            for (_iterator = _createForOfIteratorHelperLoose(keys); !(_step = _iterator()).done;) {\n              key = _step.value;\n              results.push([key, memoryStore[key]]);\n            }\n            return _context4.abrupt(\"return\", results);\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  multiRemove: function multiRemove(keys) {\n    var _iterator2, _step2, key;\n    return _regeneratorRuntime.async(function multiRemove$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            for (_iterator2 = _createForOfIteratorHelperLoose(keys); !(_step2 = _iterator2()).done;) {\n              key = _step2.value;\n              delete memoryStore[key];\n            }\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  removeItem: function removeItem(key) {\n    return _regeneratorRuntime.async(function removeItem$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            delete memoryStore[key];\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"names":["memoryStore","exports","default","setItem","key","value","_regeneratorRuntime","async","setItem$","_context","prev","next","stop","Promise","getAllKeys","getAllKeys$","_context2","abrupt","Object","keys","getItem","getItem$","_context3","multiGet","results","_iterator","_step","multiGet$","_context4","_createForOfIteratorHelperLoose","done","push","multiRemove","_iterator2","_step2","multiRemove$","_context5","removeItem","removeItem$","_context6"],"sources":["D:\\MLTraderRoot\\ml\\node_modules\\react-native-cache\\src\\memoryStore.ts"],"sourcesContent":["const memoryStore: any = {};\n\nexport default {\n    setItem: async (key: string, value: string): Promise<void> => {\n        memoryStore[key] = value;\n    },\n\n    getAllKeys: async (): Promise<string[]> => {\n        return Object.keys(memoryStore);\n    },\n\n    getItem: async (key: string): Promise<string> => {\n        return memoryStore[key];\n    },\n\n    multiGet: async (keys: string[]): Promise<any[][]> => {\n        const results: any[][] = [];\n        for (const key of keys) {\n            results.push([key, memoryStore[key]]);\n        }\n\n        return results;\n    },\n\n    multiRemove: async (keys: string[]): Promise<void> => {\n        for (const key of keys) {\n            delete memoryStore[key];\n        }\n    },\n\n    removeItem: async (key: string): Promise<void> => {\n        delete memoryStore[key];\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
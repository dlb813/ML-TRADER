{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar CardStack = function (_Component) {\n  _inherits(CardStack, _Component);\n\n  var _super = _createSuper(CardStack);\n\n  function CardStack(props) {\n    var _this;\n\n    _classCallCheck(this, CardStack);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      drag: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      }),\n      dragDistance: new Animated.Value(0),\n      sindex: 0,\n      cardA: null,\n      cardB: null,\n      topCard: 'cardA',\n      cards: [],\n      touchStart: 0\n    };\n    _this.distance = _this.constructor.distance;\n    return _this;\n  }\n\n  _createClass(CardStack, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this._panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n          return false;\n        },\n        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n          return false;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n          var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n\n          if (!_this2.props.verticalSwipe && isVerticalSwipe) {\n            return false;\n          }\n\n          return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n          var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n\n          if (!_this2.props.verticalSwipe && isVerticalSwipe) {\n            return false;\n          }\n\n          return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n        },\n        onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n          _this2.props.onSwipeStart();\n\n          _this2.setState({\n            touchStart: new Date().getTime()\n          });\n        },\n        onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n          var _this2$props = _this2.props,\n              verticalSwipe = _this2$props.verticalSwipe,\n              horizontalSwipe = _this2$props.horizontalSwipe;\n          var _this2$props2 = _this2.props,\n              verticalThreshold = _this2$props2.verticalThreshold,\n              horizontalThreshold = _this2$props2.horizontalThreshold;\n\n          var dragDistance = _this2.distance(horizontalSwipe ? gestureState.dx : 0, verticalSwipe ? gestureState.dy : 0);\n\n          _this2.state.dragDistance.setValue(dragDistance);\n\n          _this2.state.drag.setValue({\n            x: horizontalSwipe ? gestureState.dx : 0,\n            y: verticalSwipe ? gestureState.dy : 0\n          });\n        },\n        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n          return true;\n        },\n        onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n          _this2.props.onSwipeEnd();\n\n          var currentTime = new Date().getTime();\n          var swipeDuration = currentTime - _this2.state.touchStart;\n          var sindex = _this2.state.sindex;\n          var _this2$props3 = _this2.props,\n              verticalThreshold = _this2$props3.verticalThreshold,\n              horizontalThreshold = _this2$props3.horizontalThreshold,\n              disableTopSwipe = _this2$props3.disableTopSwipe,\n              disableLeftSwipe = _this2$props3.disableLeftSwipe,\n              disableRightSwipe = _this2$props3.disableRightSwipe,\n              disableBottomSwipe = _this2$props3.disableBottomSwipe;\n\n          if ((Math.abs(gestureState.dy) > verticalThreshold || Math.abs(gestureState.dy) > verticalThreshold * 0.8 && swipeDuration < 150) && _this2.props.verticalSwipe) {\n            var swipeDirection = gestureState.dy < 0 ? height * -1 : height;\n\n            if (swipeDirection < 0 && !disableTopSwipe) {\n              _this2._nextCard('top', gestureState.dx, swipeDirection, _this2.props.duration);\n            } else if (swipeDirection > 0 && !disableBottomSwipe) {\n              _this2._nextCard('bottom', gestureState.dx, swipeDirection, _this2.props.duration);\n            } else {\n              _this2._resetCard();\n            }\n          } else if ((Math.abs(gestureState.dx) > horizontalThreshold || Math.abs(gestureState.dx) > horizontalThreshold * 0.6 && swipeDuration < 150) && _this2.props.horizontalSwipe) {\n            var _swipeDirection = gestureState.dx < 0 ? width * -1 : width;\n\n            if (_swipeDirection < 0 && !disableLeftSwipe) {\n              _this2._nextCard('left', _swipeDirection, gestureState.dy, _this2.props.duration);\n            } else if (_swipeDirection > 0 && !disableRightSwipe) {\n              _this2._nextCard('right', _swipeDirection, gestureState.dy, _this2.props.duration);\n            } else {\n              _this2._resetCard();\n            }\n          } else {\n            _this2._resetCard();\n          }\n        },\n        onPanResponderTerminate: function onPanResponderTerminate(evt, gestureState) {},\n        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {\n          return true;\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initDeck();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.children !== this.props.children) {\n        this.setState({\n          cards: nextProps.children,\n          cardA: nextProps.children[this.state.topCard == 'cardA' ? this.state.sindex - 2 : this.state.sindex - 1],\n          cardB: nextProps.children[this.state.topCard == 'cardB' ? this.state.sindex - 2 : this.state.sindex - 1]\n        });\n      }\n    }\n  }, {\n    key: \"initDeck\",\n    value: function initDeck() {\n      if (typeof this.props.children !== 'undefined' && !Array.isArray(this.props.children)) {\n        this.setState({\n          cards: [this.props.children],\n          cardA: this.props.children,\n          cardB: null,\n          sindex: 2\n        });\n      } else if (Array.isArray(this.props.children)) {\n        this.setState({\n          cards: this.props.children,\n          cardA: this.props.children[0],\n          cardB: this.props.children[1],\n          sindex: 2\n        });\n      }\n    }\n  }, {\n    key: \"_resetCard\",\n    value: function _resetCard() {\n      Animated.timing(this.state.dragDistance, {\n        toValue: 0,\n        duration: this.props.duration\n      }).start();\n      Animated.spring(this.state.drag, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        duration: this.props.duration\n      }).start();\n    }\n  }, {\n    key: \"goBackFromTop\",\n    value: function goBackFromTop() {\n      this._goBack('top');\n    }\n  }, {\n    key: \"goBackFromRight\",\n    value: function goBackFromRight() {\n      this._goBack('right');\n    }\n  }, {\n    key: \"goBackFromLeft\",\n    value: function goBackFromLeft() {\n      this._goBack('left');\n    }\n  }, {\n    key: \"goBackFromBottom\",\n    value: function goBackFromBottom() {\n      this._goBack('bottom');\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(n, m) {\n      return (n % m + m) % m;\n    }\n  }, {\n    key: \"_goBack\",\n    value: function _goBack(direction) {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          cardA = _this$state.cardA,\n          cardB = _this$state.cardB,\n          cards = _this$state.cards,\n          sindex = _this$state.sindex,\n          topCard = _this$state.topCard;\n      if (sindex - 3 < 0 && !this.props.loop) return;\n      var previusCardIndex = this.mod(sindex - 3, cards.length);\n      var update = {};\n\n      if (topCard === 'cardA') {\n        update = _objectSpread(_objectSpread({}, update), {}, {\n          cardB: cards[previusCardIndex]\n        });\n      } else {\n        update = _objectSpread(_objectSpread({}, update), {}, {\n          cardA: cards[previusCardIndex]\n        });\n      }\n\n      this.setState(_objectSpread(_objectSpread({}, update), {}, {\n        topCard: topCard === 'cardA' ? 'cardB' : 'cardA',\n        sindex: sindex - 1\n      }), function () {\n        switch (direction) {\n          case 'top':\n            _this3.state.drag.setValue({\n              x: 0,\n              y: -height\n            });\n\n            _this3.state.dragDistance.setValue(height);\n\n            break;\n\n          case 'left':\n            _this3.state.drag.setValue({\n              x: -width,\n              y: 0\n            });\n\n            _this3.state.dragDistance.setValue(width);\n\n            break;\n\n          case 'right':\n            _this3.state.drag.setValue({\n              x: width,\n              y: 0\n            });\n\n            _this3.state.dragDistance.setValue(width);\n\n            break;\n\n          case 'bottom':\n            _this3.state.drag.setValue({\n              x: 0,\n              y: height\n            });\n\n            _this3.state.dragDistance.setValue(width);\n\n            break;\n\n          default:\n        }\n\n        Animated.spring(_this3.state.dragDistance, {\n          toValue: 0,\n          duration: _this3.props.duration\n        }).start();\n        Animated.spring(_this3.state.drag, {\n          toValue: {\n            x: 0,\n            y: 0\n          },\n          duration: _this3.props.duration\n        }).start();\n      });\n    }\n  }, {\n    key: \"swipeTop\",\n    value: function swipeTop(duration) {\n      this._nextCard('top', 0, -height, duration);\n    }\n  }, {\n    key: \"swipeBottom\",\n    value: function swipeBottom(duration) {\n      this._nextCard('bottom', 0, height, duration);\n    }\n  }, {\n    key: \"swipeRight\",\n    value: function swipeRight(duration) {\n      this._nextCard('right', width, 0, duration);\n    }\n  }, {\n    key: \"swipeLeft\",\n    value: function swipeLeft(duration) {\n      this._nextCard('left', -width, 0, duration);\n    }\n  }, {\n    key: \"_nextCard\",\n    value: function _nextCard(direction, x, y) {\n      var _this4 = this;\n\n      var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 400;\n      var _this$props = this.props,\n          verticalSwipe = _this$props.verticalSwipe,\n          horizontalSwipe = _this$props.horizontalSwipe,\n          loop = _this$props.loop;\n      var _this$state2 = this.state,\n          sindex = _this$state2.sindex,\n          cards = _this$state2.cards,\n          topCard = _this$state2.topCard;\n      var nextCard = loop ? Math.abs(sindex) % cards.length : sindex;\n      var index = loop ? this.mod(nextCard - 2, cards.length) : nextCard - 2;\n\n      if (sindex - 2 < cards.length || loop) {\n        Animated.spring(this.state.dragDistance, {\n          toValue: 220,\n          duration: duration\n        }).start();\n        Animated.timing(this.state.drag, {\n          toValue: {\n            x: horizontalSwipe ? x : 0,\n            y: verticalSwipe ? y : 0\n          },\n          duration: duration\n        }).start(function () {\n          var newTopCard = topCard === 'cardA' ? 'cardB' : 'cardA';\n          var update = {};\n\n          if (newTopCard === 'cardA') {\n            update = _objectSpread(_objectSpread({}, update), {}, {\n              cardB: cards[nextCard]\n            });\n          }\n\n          if (newTopCard === 'cardB') {\n            update = _objectSpread(_objectSpread({}, update), {}, {\n              cardA: cards[nextCard]\n            });\n          }\n\n          _this4.state.drag.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this4.state.dragDistance.setValue(0);\n\n          _this4.setState(_objectSpread(_objectSpread({}, update), {}, {\n            topCard: newTopCard,\n            sindex: nextCard + 1\n          }));\n\n          _this4.props.onSwiped(index);\n\n          switch (direction) {\n            case 'left':\n              _this4.props.onSwipedLeft(index);\n\n              _this4.state.cards[index].props.onSwipedLeft();\n\n              break;\n\n            case 'right':\n              _this4.props.onSwipedRight(index);\n\n              _this4.state.cards[index].props.onSwipedRight();\n\n              break;\n\n            case 'top':\n              _this4.props.onSwipedTop(index);\n\n              _this4.state.cards[index].props.onSwipedTop();\n\n              break;\n\n            case 'bottom':\n              _this4.props.onSwipedBottom(index);\n\n              _this4.state.cards[index].props.onSwipedBottom();\n\n              break;\n\n            default:\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_setPointerEvents\",\n    value: function _setPointerEvents(topCard, topCardName) {\n      return {\n        pointerEvents: topCard === topCardName ? \"auto\" : \"none\"\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var secondCardZoom = this.props.secondCardZoom;\n      var _this$state3 = this.state,\n          drag = _this$state3.drag,\n          dragDistance = _this$state3.dragDistance,\n          cardA = _this$state3.cardA,\n          cardB = _this$state3.cardB,\n          topCard = _this$state3.topCard,\n          sindex = _this$state3.sindex;\n      var SC = dragDistance.interpolate({\n        inputRange: [0, 10, 220],\n        outputRange: [secondCardZoom, secondCardZoom, 1],\n        extrapolate: 'clamp'\n      });\n      var rotate = drag.x.interpolate({\n        inputRange: [-320, 0, 320],\n        outputRange: this.props.outputRotationRange,\n        extrapolate: 'clamp'\n      });\n      return _jsxs(View, _objectSpread(_objectSpread({}, this._panResponder.panHandlers), {}, {\n        style: [{\n          position: 'relative'\n        }, this.props.style],\n        children: [this.props.renderNoMoreCards(), _jsx(Animated.View, _objectSpread(_objectSpread({}, this._setPointerEvents(topCard, 'cardB')), {}, {\n          style: _objectSpread(_objectSpread({\n            position: 'absolute',\n            zIndex: topCard === 'cardB' ? 3 : 2\n          }, Platform.select({\n            android: {\n              elevation: topCard === 'cardB' ? 3 : 2\n            }\n          })), {}, {\n            opacity: topCard === 'cardB' ? 1 : this.props.passiveOpacity,\n            transform: [{\n              rotate: topCard === 'cardB' ? rotate : '0deg'\n            }, {\n              translateX: topCard === 'cardB' ? drag.x : 0\n            }, {\n              translateY: topCard === 'cardB' ? drag.y : 0\n            }, {\n              scale: topCard === 'cardB' ? 1 : SC\n            }, {\n              scaleY: topCard === 'cardB' ? 1 : this.props.passiveScaleY\n            }]\n          }),\n          children: cardB\n        })), _jsx(Animated.View, _objectSpread(_objectSpread({}, this._setPointerEvents(topCard, 'cardA')), {}, {\n          style: _objectSpread(_objectSpread({\n            position: 'absolute',\n            zIndex: topCard === 'cardA' ? 3 : 2\n          }, Platform.select({\n            android: {\n              elevation: topCard === 'cardA' ? 3 : 2\n            }\n          })), {}, {\n            opacity: topCard === 'cardA' ? 1 : this.props.passiveOpacity,\n            transform: [{\n              rotate: topCard === 'cardA' ? rotate : '0deg'\n            }, {\n              translateX: topCard === 'cardA' ? drag.x : 0\n            }, {\n              translateY: topCard === 'cardA' ? drag.y : 0\n            }, {\n              scale: topCard === 'cardA' ? 1 : SC\n            }, {\n              scaleY: topCard === 'cardA' ? 1 : this.props.passiveScaleY\n            }]\n          }),\n          children: cardA\n        }))]\n      }));\n    }\n  }], [{\n    key: \"distance\",\n    value: function distance(x, y) {\n      var a = Math.abs(x);\n      var b = Math.abs(y);\n      var c = Math.sqrt(a * a + b * b);\n      return c;\n    }\n  }]);\n\n  return CardStack;\n}(Component);\n\nexport { CardStack as default };\nCardStack.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  secondCardZoom: PropTypes.number,\n  loop: PropTypes.bool,\n  renderNoMoreCards: PropTypes.func,\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  outputRotationRange: PropTypes.array,\n  duration: PropTypes.number\n};\nCardStack.defaultProps = {\n  style: {},\n  secondCardZoom: 0.95,\n  loop: true,\n  renderNoMoreCards: function renderNoMoreCards() {\n    return _jsx(Text, {\n      children: \"No More Cards\"\n    });\n  },\n  onSwipeStart: function onSwipeStart() {\n    return null;\n  },\n  onSwipeEnd: function onSwipeEnd() {\n    return null;\n  },\n  onSwiped: function onSwiped() {},\n  onSwipedLeft: function onSwipedLeft() {},\n  onSwipedRight: function onSwipedRight() {},\n  onSwipedTop: function onSwipedTop() {},\n  onSwipedBottom: function onSwipedBottom() {},\n  onSwipedAll: function onSwipedAll() {\n    console.log('onSwipedAll');\n  },\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  verticalSwipe: true,\n  verticalThreshold: height / 4,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 2,\n  outputRotationRange: ['-15deg', '0deg', '15deg'],\n  duration: 200\n};","map":{"version":3,"sources":["C:/Projects/machinelearningapp/node_modules/react-native-card-stack-swiper-stek/CardStack.js"],"names":["React","Component","PropTypes","Dimensions","get","height","width","CardStack","props","state","drag","Animated","ValueXY","x","y","dragDistance","Value","sindex","cardA","cardB","topCard","cards","touchStart","distance","constructor","_panResponder","PanResponder","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","isVerticalSwipe","Math","sqrt","pow","dx","dy","verticalSwipe","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onSwipeStart","setState","Date","getTime","onPanResponderMove","horizontalSwipe","verticalThreshold","horizontalThreshold","setValue","onPanResponderTerminationRequest","onPanResponderRelease","onSwipeEnd","currentTime","swipeDuration","disableTopSwipe","disableLeftSwipe","disableRightSwipe","disableBottomSwipe","abs","swipeDirection","_nextCard","duration","_resetCard","onPanResponderTerminate","onShouldBlockNativeResponder","initDeck","nextProps","children","Array","isArray","timing","toValue","start","spring","_goBack","n","m","direction","loop","previusCardIndex","mod","length","update","nextCard","index","newTopCard","onSwiped","onSwipedLeft","onSwipedRight","onSwipedTop","onSwipedBottom","topCardName","pointerEvents","secondCardZoom","SC","interpolate","inputRange","outputRange","extrapolate","rotate","outputRotationRange","panHandlers","position","style","renderNoMoreCards","_setPointerEvents","zIndex","Platform","select","android","elevation","opacity","passiveOpacity","transform","translateX","translateY","scale","scaleY","passiveScaleY","a","b","c","propTypes","oneOfType","array","object","isRequired","number","bool","func","onSwipedAll","defaultProps","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {\n  StyleSheet,\n  View,\n  Animated,\n  PanResponder,\n  Dimensions,\n  Text,\n  Platform\n} from 'react-native';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default class CardStack extends Component {\n\n\n  static distance(x, y) {\n    const a = Math.abs(x);\n    const b = Math.abs(y);\n    const c = Math.sqrt((a * a) + (b * b));\n    return c;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state ={\n      drag: new Animated.ValueXY({x: 0, y: 0}),\n      dragDistance: new Animated.Value(0),\n      sindex: 0, // index to the next card to be renderd mod card.length\n      cardA: null,\n      cardB: null,\n      topCard: 'cardA',\n      cards: [],\n      touchStart: 0,\n    };\n    this.distance = this.constructor.distance;\n  }\n\n\n  componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => false,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => false,\n      onMoveShouldSetPanResponder: (evt, gestureState) =>  {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      }, //(parseInt(gestureState.dx) !== 0 && parseInt(gestureState.dy) !== 0),\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      },  //(parseInt(gestureState.dx) !== 0 && parseInt(gestureState.dy) !== 0),\n      onPanResponderGrant: (evt, gestureState) => {\n        this.props.onSwipeStart();\n        this.setState({ touchStart: new Date().getTime() });\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        const { verticalSwipe, horizontalSwipe } = this.props;\n        const { verticalThreshold, horizontalThreshold } = this.props\n        const dragDistance = this.distance((horizontalSwipe) ? gestureState.dx : 0, (verticalSwipe) ? gestureState.dy : 0 );\n        this.state.dragDistance.setValue(dragDistance);\n        this.state.drag.setValue({x: (horizontalSwipe) ? gestureState.dx : 0, y: (verticalSwipe) ? gestureState.dy : 0});\n      },\n      onPanResponderTerminationRequest: (evt, gestureState) => true,\n      onPanResponderRelease: (evt, gestureState) => {\n        this.props.onSwipeEnd();\n        const currentTime = new Date().getTime();\n        const swipeDuration = currentTime-this.state.touchStart;\n        const { sindex } = this.state;\n        const { verticalThreshold,\n                horizontalThreshold,\n                disableTopSwipe,\n                disableLeftSwipe,\n                disableRightSwipe,\n                disableBottomSwipe,\n              } = this.props;\n\n\n        if (((Math.abs(gestureState.dy) > verticalThreshold)  ||\n            ( Math.abs(gestureState.dy) > verticalThreshold*0.8 &&\n              swipeDuration < 150)\n            ) && this.props.verticalSwipe)\n        {\n\n          const swipeDirection = (gestureState.dy < 0) ? height * -1 : height;\n          if(swipeDirection < 0 && !disableTopSwipe)\n          {\n\n            this._nextCard('top', gestureState.dx, swipeDirection, this.props.duration);\n          }\n          else if (swipeDirection > 0 && !disableBottomSwipe)\n          {\n            this._nextCard('bottom', gestureState.dx, swipeDirection, this.props.duration);\n          }\n          else\n          {\n            this._resetCard();\n          }\n        }else if (((Math.abs(gestureState.dx) > horizontalThreshold) ||\n                  (Math.abs(gestureState.dx) > horizontalThreshold*0.6 &&\n                  swipeDuration < 150)\n                ) && this.props.horizontalSwipe) {\n\n          const swipeDirection = (gestureState.dx < 0) ? width * -1 : width;\n          if (swipeDirection < 0 && !disableLeftSwipe)\n          {\n            this._nextCard('left', swipeDirection, gestureState.dy, this.props.duration);\n          }\n          else if(swipeDirection > 0 && !disableRightSwipe)\n          {\n            this._nextCard('right', swipeDirection, gestureState.dy, this.props.duration);\n          }\n          else\n          {\n            this._resetCard();\n          }\n        }\n        else\n        {\n          this._resetCard();\n        }\n      },\n      onPanResponderTerminate: (evt, gestureState) => {\n      },\n      onShouldBlockNativeResponder: (evt, gestureState) => {\n        return true;\n      },\n    });\n  }\n\n  componentDidMount(){\n    this.initDeck();\n  }\n\n  componentWillReceiveProps(nextProps){\n    if (nextProps.children !== this.props.children) {\n      this.setState({\n        cards: nextProps.children,\n        cardA: nextProps.children[(this.state.topCard=='cardA')? this.state.sindex-2 : this.state.sindex-1],\n        cardB: nextProps.children[(this.state.topCard=='cardB')? this.state.sindex-2 : this.state.sindex-1]\n      });\n    }\n  }\n\n  initDeck() {\n    // check if we only have 1 child\n    if(typeof this.props.children !== 'undefined' && !Array.isArray(this.props.children)){\n      this.setState({\n        cards: [this.props.children],\n        cardA: this.props.children,\n        cardB: null,\n        sindex: 2,\n      });\n    }else if(Array.isArray(this.props.children)){\n      this.setState({\n        cards: this.props.children,\n        cardA: this.props.children[0],\n        cardB: this.props.children[1],\n        sindex: 2,\n      });\n    }\n  }\n\n  _resetCard(){\n\n    Animated.timing(\n      this.state.dragDistance,\n      {\n        toValue: 0,\n        duration: this.props.duration,\n      }\n    ).start();\n    Animated.spring(\n      this.state.drag,\n      {\n        toValue: {x: 0, y: 0},\n        duration: this.props.duration,\n      }\n    ).start();\n\n  }\n\n\n  goBackFromTop(){\n    this._goBack('top');\n  }\n\n  goBackFromRight(){\n    this._goBack('right');\n  }\n\n  goBackFromLeft(){\n    this._goBack('left');\n  }\n\n  goBackFromBottom(){\n    this._goBack('bottom');\n  }\n\n  mod(n, m) {\n    return ((n % m) + m) % m;\n  }\n\n  _goBack(direction){\n    const {cardA, cardB, cards, sindex, topCard} = this.state;\n\n    if((sindex-3) < 0 && !this.props.loop) return;\n\n    const previusCardIndex = this.mod(sindex-3, cards.length)\n    let update = {};\n    if(topCard === 'cardA'){\n      update = {\n        ...update,\n        cardB: cards[previusCardIndex]\n\n      }\n    }else{\n      update = {\n        ...update,\n        cardA: cards[previusCardIndex],\n      }\n    }\n\n    this.setState({\n      ...update,\n      topCard: (topCard === 'cardA') ? 'cardB' : 'cardA',\n      sindex: sindex-1\n    }, () => {\n\n      switch (direction) {\n        case 'top':\n          this.state.drag.setValue({x: 0, y: -height});\n          this.state.dragDistance.setValue(height);\n          break;\n        case 'left':\n          this.state.drag.setValue({x: -width, y: 0});\n          this.state.dragDistance.setValue(width);\n          break;\n        case 'right':\n          this.state.drag.setValue({x: width, y: 0});\n          this.state.dragDistance.setValue(width);\n          break;\n        case 'bottom':\n          this.state.drag.setValue({x: 0, y: height});\n          this.state.dragDistance.setValue(width);\n          break;\n        default:\n\n      }\n\n      Animated.spring(\n        this.state.dragDistance,\n        {\n          toValue: 0,\n          duration: this.props.duration,\n        }\n      ).start();\n\n      Animated.spring(\n        this.state.drag,\n        {\n          toValue: {x: 0, y: 0},\n          duration: this.props.duration,\n        }\n      ).start();\n    })\n  }\n\n\n\n  swipeTop(duration){\n    this._nextCard('top', 0, -height, duration);\n  }\n\n  swipeBottom(duration){\n    this._nextCard('bottom', 0, height, duration);\n  }\n\n  swipeRight(duration){\n    this._nextCard('right', width, 0, duration);\n  }\n\n  swipeLeft(duration){\n    this._nextCard('left', -width, 0, duration);\n  }\n\n  _nextCard(direction, x, y, duration=400){\n    const { verticalSwipe, horizontalSwipe, loop } = this.props;\n    const { sindex, cards, topCard } = this.state;\n\n    // index for the next card to be renderd\n    const nextCard = (loop) ? (Math.abs(sindex) % cards.length) : sindex;\n\n    // index of the swiped card\n    const index = (loop) ? this.mod(nextCard-2, cards.length) : nextCard - 2;\n\n    if((sindex-2 < cards.length) || (loop) ){\n      Animated.spring(\n        this.state.dragDistance,\n        {\n          toValue: 220,\n          duration,\n        }\n      ).start();\n\n      Animated.timing(\n        this.state.drag,\n        {\n          toValue: { x: (horizontalSwipe) ? x : 0, y: (verticalSwipe) ? y : 0 },\n          duration,\n        }\n      ).start(() => {\n\n        const newTopCard =  (topCard === 'cardA') ? 'cardB' : 'cardA';\n\n        let update = {};\n        if(newTopCard === 'cardA') {\n          update = {\n            ...update,\n            cardB: cards[nextCard]\n          };\n        }\n        if(newTopCard === 'cardB') {\n          update = {\n            ...update,\n            cardA: cards[nextCard],\n          };\n        }\n        this.state.drag.setValue({x: 0, y: 0});\n        this.state.dragDistance.setValue(0);\n        this.setState({\n          ...update,\n          topCard: newTopCard,\n          sindex: nextCard+1\n        });\n\n        this.props.onSwiped(index);\n        switch (direction) {\n          case 'left':\n            this.props.onSwipedLeft(index);\n            this.state.cards[index].props.onSwipedLeft();\n            break;\n          case 'right':\n            this.props.onSwipedRight(index);\n            this.state.cards[index].props.onSwipedRight();\n            break;\n          case 'top':\n            this.props.onSwipedTop(index);\n            this.state.cards[index].props.onSwipedTop();\n            break;\n          case 'bottom':\n            this.props.onSwipedBottom(index);\n            this.state.cards[index].props.onSwipedBottom();\n            break;\n          default:\n        }\n      });\n\n    }\n  }\n\n\n  /**\n   * @description CardB’s click feature is trigger the CardA on the card stack. (Solved on Android)\n   * @see https://facebook.github.io/react-native/docs/view#pointerevents\n   */\n  _setPointerEvents(topCard, topCardName) {\n    return { pointerEvents: topCard === topCardName ? \"auto\" : \"none\" }\n  }  \n\n  render() {\n\n    const { secondCardZoom } = this.props;\n    const { drag, dragDistance, cardA, cardB, topCard, sindex } = this.state;\n\n    const SC = dragDistance.interpolate({\n      inputRange: [0,10, 220],\n      outputRange: [secondCardZoom,secondCardZoom,1],\n      extrapolate: 'clamp',\n    });\n    const rotate = drag.x.interpolate({\n      inputRange: [-320,0,320],\n      outputRange: this.props.outputRotationRange,\n      extrapolate: 'clamp',\n    });\n\n    return (\n        <View {...this._panResponder.panHandlers} style={[{position:'relative'},this.props.style]}>\n\n          {this.props.renderNoMoreCards()}\n\n          <Animated.View \n              {...this._setPointerEvents(topCard, 'cardB')}\n              style={{\n                position: 'absolute',\n                zIndex: (topCard === 'cardB') ? 3 : 2,\n                ...Platform.select({\n                  android: {\n                    elevation: (topCard === 'cardB') ? 3 : 2,\n                  }\n                }),\n               opacity: (topCard === 'cardB') ? 1 : this.props.passiveOpacity,\n\n              transform: [\n              // {scaleY:0.8},\n                  { rotate: (topCard === 'cardB') ? rotate: '0deg' },\n                  {translateX: (topCard === 'cardB') ? drag.x: 0},\n                  {translateY: (topCard === 'cardB') ? drag.y: 0},\n                  { scale: (topCard === 'cardB') ? 1 : SC},\n              { scaleY: (topCard === 'cardB') ? 1 : this.props.passiveScaleY},\n\n          ]\n              }}>\n              {cardB}\n          </Animated.View>\n          <Animated.View \n              {...this._setPointerEvents(topCard, 'cardA')}\n              style={{\n                position: 'absolute',\n                zIndex: (topCard === 'cardA') ? 3 : 2,\n                ...Platform.select({\n                  android: {\n                    elevation: (topCard === 'cardA') ? 3 : 2,\n                  }\n                }),\n              opacity: (topCard === 'cardA') ? 1 : this.props.passiveOpacity,\n\n              transform: [\n                  { rotate: (topCard === 'cardA') ? rotate: '0deg' },\n                  {translateX: (topCard === 'cardA') ? drag.x: 0},\n                  {translateY: (topCard === 'cardA') ? drag.y: 0},\n                  { scale: (topCard === 'cardA') ? 1 : SC},\n                  { scaleY: (topCard === 'cardA') ? 1 : this.props.passiveScaleY},\n\n          ]\n              }}>\n              {cardA}\n          </Animated.View>\n\n        </View>\n    );\n  }\n}\n\nCardStack.propTypes = {\n\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  secondCardZoom: PropTypes.number,\n  loop: PropTypes.bool,\n  renderNoMoreCards: PropTypes.func,\n  onSwipeStart: PropTypes.func,\n  onSwipeEnd: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight:PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwiped: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  outputRotationRange: PropTypes.array,\n  duration: PropTypes.number\n\n}\n\nCardStack.defaultProps = {\n\n  style:{},\n  secondCardZoom: 0.95,\n  loop: true,\n  renderNoMoreCards: () => { return (<Text>No More Cards</Text>)},\n  onSwipeStart: () => null,\n  onSwipeEnd: () => null,\n  onSwiped: () => {},\n  onSwipedLeft: () => {},\n  onSwipedRight: () => {},\n  onSwipedTop: () => {},\n  onSwipedBottom: () => {},\n  onSwipedAll: () => {\n    console.log('onSwipedAll')\n  },\n\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  verticalSwipe: true,\n  verticalThreshold: height/4,\n  horizontalSwipe: true,\n  horizontalThreshold: width/2,\n  outputRotationRange: ['-15deg','0deg','15deg'],\n  duration: 200\n\n  \n}"]},"metadata":{},"sourceType":"module"}
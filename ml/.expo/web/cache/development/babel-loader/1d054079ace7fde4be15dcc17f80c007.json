{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport CardStack, { Card } from 'react-native-card-stack-swiper-stek';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Stocks(props) {\n  var symbols = props.symbols;\n  var names = props.names;\n  var Cards = [];\n  var index = 0;\n  load();\n\n  function load() {\n    for (var _iterator = _createForOfIteratorHelperLoose(symbols), _step; !(_step = _iterator()).done;) {\n      var sym = _step.value;\n      var prediction = props.makePrediction(names[index]);\n      Cards.push(_jsx(Card, {\n        style: [styles.card, styles.card1],\n        children: _jsxs(Text, {\n          style: styles.label,\n          pointerEvents: \"none\",\n          children: [symbols[index], _jsx(\"br\", {}), prediction[0], _jsx(\"br\", {}), prediction[1], _jsx(\"br\", {}), names[index]]\n        })\n      }, symbols[index]));\n      index++;\n    }\n  }\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(CardStack, {\n      style: styles.content,\n      renderNoMoreCards: function renderNoMoreCards() {\n        return _jsx(Text, {\n          style: {\n            fontWeight: '700',\n            fontSize: 18,\n            color: 'gray'\n          },\n          children: \"No more cards :(\"\n        });\n      },\n      onSwiped: function onSwiped() {\n        return console.log('onSwiped');\n      },\n      onSwipedLeft: function onSwipedLeft() {\n        return console.log('onSwipedLeft');\n      },\n      children: Cards\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#f2f2f2'\n  },\n  content: {\n    flex: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    width: 300,\n    height: '40%',\n    backgroundColor: '#413563',\n    borderRadius: 5,\n    shadowColor: 'rgba(0,0,0,0.5)',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.5\n  },\n  card1: {\n    backgroundColor: '#413563'\n  },\n  card2: {\n    backgroundColor: '#FEB12C'\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 55,\n    fontFamily: 'System',\n    color: '#ffffff',\n    backgroundColor: 'transparent'\n  },\n  footer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    width: 220,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  button: {\n    shadowColor: 'rgba(0,0,0,0.3)',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.5,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 0\n  },\n  orange: {\n    width: 55,\n    height: 55,\n    borderWidth: 6,\n    borderColor: 'rgb(246,190,66)',\n    borderRadius: 55,\n    marginTop: -15\n  },\n  green: {\n    width: 75,\n    height: 75,\n    backgroundColor: '#fff',\n    borderRadius: 75,\n    borderWidth: 6,\n    borderColor: '#01df8a'\n  },\n  red: {\n    width: 75,\n    height: 75,\n    backgroundColor: '#fff',\n    borderRadius: 75,\n    borderWidth: 6,\n    borderColor: '#fd267d'\n  }\n});","map":{"version":3,"sources":["C:/Projects/MachineLearningApp/Stocks.jsx"],"names":["React","CardStack","Card","Stocks","props","symbols","names","Cards","index","load","sym","prediction","makePrediction","push","styles","card","card1","label","flex","content","fontWeight","fontSize","color","console","log","StyleSheet","create","container","flexDirection","backgroundColor","alignItems","justifyContent","width","height","borderRadius","shadowColor","shadowOffset","shadowOpacity","card2","textAlign","fontFamily","footer","buttonContainer","button","zIndex","orange","borderWidth","borderColor","marginTop","green","red"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Image,\r\n} from 'react-native';\r\nimport CardStack, { Card } from 'react-native-card-stack-swiper-stek';\r\n\r\nexport function Stocks(props) {\r\n  var symbols = props.symbols;\r\n  var names = props.names;\r\n  var Cards = [];\r\n  var index = 0;\r\n  load();\r\n  function load() {\r\n    for (let sym of symbols) {\r\n      var prediction = props.makePrediction(names[index]);\r\n      \r\n      Cards.push(\r\n        <Card style={[styles.card, styles.card1]} key={symbols[index]}>\r\n          <Text style={styles.label} pointerEvents=\"none\">{symbols[index]}<br></br>{prediction[0]}<br></br>{prediction[1]}<br></br>{names[index]}</Text>\r\n        </Card>)\r\n      index++;\r\n    }\r\n  }\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n\r\n      <CardStack\r\n        style={styles.content}\r\n        renderNoMoreCards={() => <Text style={{ fontWeight: '700', fontSize: 18, color: 'gray' }}>No more cards :(</Text>}\r\n        onSwiped={() => console.log('onSwiped')}\r\n        onSwipedLeft={() => console.log('onSwipedLeft')}\r\n      >\r\n        {Cards}\r\n      </CardStack>\r\n    </View>\r\n  );\r\n};\r\n\r\n/*<Card style={[styles.card, styles.card1]}><Text style={styles.label}>A</Text></Card>\r\n        <Card style={[styles.card, styles.card2]} onSwipedLeft={() => alert('onSwipedLeft')}><Text style={styles.label}>B</Text></Card>\r\n        <Card style={[styles.card, styles.card1]}><Text style={styles.label}>C</Text></Card>\r\n        <Card style={[styles.card, styles.card2]}><Text style={styles.label}>D</Text></Card>\r\n        <Card style={[styles.card, styles.card1]}><Text style={styles.label}>E</Text></Card> */\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    backgroundColor: '#f2f2f2',\r\n  },\r\n  content: {\r\n    flex: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  card: {\r\n    width: 300,\r\n    height: '40%',\r\n    backgroundColor: '#413563',\r\n    borderRadius: 5,\r\n    shadowColor: 'rgba(0,0,0,0.5)',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1\r\n    },\r\n    shadowOpacity: 0.5,\r\n  },\r\n  card1: {\r\n    backgroundColor: '#413563',\r\n  },\r\n  card2: {\r\n    backgroundColor: '#FEB12C',\r\n  },\r\n  label: {\r\n    textAlign: 'center',\r\n    fontSize: 55,\r\n    fontFamily: 'System',\r\n    color: '#ffffff',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  footer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    width: 220,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  button: {\r\n    shadowColor: 'rgba(0,0,0,0.3)',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1\r\n    },\r\n    shadowOpacity: 0.5,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 0,\r\n  },\r\n  orange: {\r\n    width: 55,\r\n    height: 55,\r\n    borderWidth: 6,\r\n    borderColor: 'rgb(246,190,66)',\r\n    borderRadius: 55,\r\n    marginTop: -15\r\n  },\r\n  green: {\r\n    width: 75,\r\n    height: 75,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 75,\r\n    borderWidth: 6,\r\n    borderColor: '#01df8a',\r\n  },\r\n  red: {\r\n    width: 75,\r\n    height: 75,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 75,\r\n    borderWidth: 6,\r\n    borderColor: '#fd267d',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}